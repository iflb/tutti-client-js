{"version":3,"sources":["webpack://tutti/webpack/universalModuleDefinition","webpack://tutti/./index.js","webpack://tutti/./lib/tutti.js","webpack://tutti/./node_modules/@iflb/ducts/lib/ducts.js","webpack://tutti/./node_modules/base64-js/index.js","webpack://tutti/./node_modules/buffer/index.js","webpack://tutti/./node_modules/es5-ext/global.js","webpack://tutti/./node_modules/get-random-values/index.js","webpack://tutti/./node_modules/global/window.js","webpack://tutti/./node_modules/ieee754/index.js","webpack://tutti/./node_modules/node-fetch/browser.js","webpack://tutti/./node_modules/pretty-bytes/index.js","webpack://tutti/./node_modules/websocket/lib/browser.js","webpack://tutti/./node_modules/websocket/lib/version.js","webpack://tutti/./node_modules/what-the-pack/browser.js","webpack://tutti/webpack/bootstrap","webpack://tutti/webpack/startup","webpack://tutti/webpack/runtime/global"],"names":["root","factory","exports","module","define","amd","self","ducts","Buffer","Duct","super","this","onOpenHandlers","controllers","resource","ResourceController","mturk","MTurkController","eventListeners","ResourceEventListener","MTurkEventListener","send","rid","eid","data","logger","addSent","_send","addOnOpenHandler","handler","push","event","_onopen","setEventHandler","EVENT","APP_WSD","next_rid","setupHandlers","decode","from","source","addReceived","_onmessage","f","state","State","OPEN_CONNECTED","name","func","success","error","EVENT_HISTORY","_handleResource","LIST_PROJECTS","CREATE_PROJECT","GET_PROJECT_SCHEME","CREATE_TEMPLATES","LIST_TEMPLATE_PRESETS","LIST_TEMPLATES","GET_RESPONSES_FOR_TEMPLATE","GET_RESPONSES_FOR_NANOTASK","GET_NANOTASKS","UPLOAD_NANOTASKS","DELETE_NANOTASKS","UPDATE_NANOTASK_NUM_ASSIGNABLE","SESSION","CHECK_PLATFORM_WORKER_ID_EXISTENCE_FOR_PROJECT","MTURK_GET_CREDENTIALS","_handleMTurk","MTURK_SET_CREDENTIALS","MTURK_CLEAR_CREDENTIALS","MTURK_SET_SANDBOX","MTURK_GET_HIT_TYPES","MTURK_CREATE_HIT_TYPE","MTURK_CREATE_HITS_WITH_HIT_TYPE","MTURK_LIST_QUALIFICATIONS","MTURK_LIST_HITS","MTURK_LIST_HITS_FOR_HIT_TYPE","MTURK_EXPIRE_HITS","MTURK_DELETE_HITS","MTURK_CREATE_QUALIFICATION","LIST_WORKERS","MTURK_LIST_WORKERS_WITH_QUALIFICATION_TYPE","MTURK_DELETE_QUALIFICATIONS","MTURK_LIST_ASSIGNMENTS","MTURK_LIST_ASSIGNMENTS_FOR_HITS","MTURK_APPROVE_ASSIGNMENTS","MTURK_REJECT_ASSIGNMENTS","MTURK_GET_ASSIGNMENTS","DuctEventListener","on","names","Array","ReferenceError","Object","keys","length","constructor","getEventHistory","setEventHistory","listProjects","createProject","getProjectScheme","createTemplates","listTemplatePresets","listTemplates","getResponsesForTemplate","getResponsesForNanotask","getNanotasks","uploadNanotasks","deleteNanotasks","updateNanotaskNumAssignable","getTemplateNode","setResponse","createSession","checkPlatformWorkerIdExistenceForProject","getCredentials","setCredentials","clearCredentials","setSandbox","getHITTypes","createHITType","createHITsWithHITType","listQualifications","listHITs","listHITsForHITType","expireHITs","deleteHITs","createQualification","listWorkers","listWorkersWithQualificationType","deleteQualifications","listAssignments","listAssignmentsForHITs","approveAssignments","rejectAssignments","getAssignments","duct","_duct","AccessKeyId","SecretAccessKey","Enabled","QualificationTypeIds","QualificationTypeId","QualificationTypeParams","associateQualificationsWithWorkers","AssociateQualificationParams","MTURK_ASSOCIATE_QUALIFICATIONS_WITH_WORKERS","Platform","notifyWorkers","Subject","MessageText","SendEmailWorkerIds","MTURK_NOTIFY_WORKERS","CreateHITTypeParams","HITTypeQualificationTypeId","ProjectName","NumHITs","CreateHITsWithHITTypeParams","HITTypeIds","HITIds","Cached","HITTypeId","AssignmentIds","RequesterFeedback","query","TemplateName","NanotaskId","TemplateNames","PresetEnvName","PresetTemplateName","NanotaskIds","NumAssignable","Nanotasks","Priority","TagName","Target","WorkSessionId","NodeSessionId","Command","PlatformWorkerId","ClientToken","Answers","DuctEventLogger","dataSizeLimit","log","sent","_skipLargeData","received","newData","key","JSON","stringify","MessagePack","encode","initialize","WebSocket","fetch","getRandomValues","DuctError","Error","message","args","defineProperty","configurable","enumerable","value","writable","captureStackTrace","stack","stackTraceToMerge","baseStackTrace","entriesToMerge","split","baseEntries","newEntries","forEach","entry","includes","join","merge","DuctEvent","DuctConnectionEvent","freeze","CLOSE","OPEN_CONNECTING","CONNECTING","OPEN","OPEN_CLOSING","OPEN_CLOSED","CLOSED","ConnectionEventListener","DuctMessageEvent","WSD","next_id","Date","getTime","last_rid","open","wsd_url","uuid","params","_open","reconnect","_reconnect","request_id","event_id","close","_close","_connection_listener","_event_handler","catchall_event_handler","uncaught_event_handler","event_error_handler","_ws","readyState","wsd","Promise","resolve","reject","ws","websocket_url_reconnect","binaryType","onopen","onerror","onclose","onmessage","_onreconnect","replace","c","Uint8Array","toString","entries","headers","then","response","json","websocket_url","catch","_send_timestamp","time_offset","time_latency","_time_count","ALIVE_MONITORING","client_received","server_sent","server_received","client_sent","new_offset","new_latency","msgpack","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","alphabet","table","i16","naiveFallback","window","globalThis","__global__","nodeCrypto","crypto","msCrypto","randomBytes","win","g","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","LN2","global","getGlobal","default","bind","Headers","Request","Response","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","number","locale","options","result","UNITS","assign","bits","binary","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","exponent","log10","toPrecision","_globalThis","NativeWebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","pb","tempBufferLength","logFunction","dictionary","dictionaryEnabled","dictionaryOffset","tempEncodeBuffer","tempEncodeBufferOffset","internalEncode","l","fround","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","temp","tempDecodeBuffer","tempDecodeBufferOffset","internalDecode","encoded","register","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","Function"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,MAAM,WACT,M,0BCVAH,EAAOD,QAAU,EAAjB,K,aCAA,MAAMK,EAAQ,EAAQ,KAChBC,EAAS,UAEf,MAAMC,UAAaF,EAAME,KAErB,cACIC,QAEAC,KAAKC,eAAiB,GAEtBD,KAAKE,YAAc,CACfC,SAAU,IAAIC,EAAmBJ,MACjCK,MAAO,IAAIC,EAAgBN,OAE/BA,KAAKO,eAAiB,CAClBJ,SAAU,IAAIK,EACdH,MAAO,IAAII,GAGfT,KAAKU,KACD,CAACC,EAAKC,EAAKC,KACJb,KAAKc,QAAQd,KAAKc,OAAOC,QAAQJ,EAAKC,EAAKC,GACvCd,MAAMiB,MAAMhB,KAAMW,EAAKC,EAAKC,IAG3Cb,KAAKiB,iBAAoBC,IAAclB,KAAKC,eAAekB,KAAKD,IAGpE,QAAQvB,EAAMyB,GACVrB,MAAMsB,QAAS1B,EAAMyB,GACrBzB,EAAK2B,gBAAiB3B,EAAK4B,MAAMC,SAAS,CAACb,EAAKC,EAAKC,KAAWlB,EAAK6B,QAAUX,KAC/ElB,EAAKe,KAAMf,EAAK8B,WAAY9B,EAAK4B,MAAMC,QAAS,MAEhDxB,KAAK0B,cAAc1B,MACnB,IAAI,MAAMkB,KAAWlB,KAAKC,eAAiBiB,IAG/C,WAAWvB,EAAMyB,GACb,MAAOT,EAAKC,EAAKC,GAAQlB,EAAKgC,OAAO9B,EAAO+B,KAAKR,EAAMS,OAAOhB,OAC3DlB,EAAKmB,QAAQnB,EAAKmB,OAAOgB,YAAYnB,EAAKC,EAAKC,GAClDd,MAAMgC,WAAYpC,EAAMyB,GAG5B,oBAAoBY,GACbhC,KAAKiC,OAAOrC,EAAMsC,MAAMC,eAAgBH,IACtChC,KAAKiB,iBAAiBe,GAI/B,aAAarC,EAAMyC,EAAMvB,GACrB,GAAmB,WAAhBA,EAAa,OACZ,IAAI,MAAMwB,KAAQ1C,EAAKY,eAAeF,MAAM+B,GAAME,QAAUD,EAAKxB,EAAe,eAEhF,IAAI,MAAMwB,KAAQ1C,EAAKY,eAAeF,MAAM+B,GAAMG,MAAQF,EAAKxB,GAIvE,gBAAgBlB,EAAMyC,EAAMvB,GACxB,GAAmB,WAAhBA,EAAa,OACZ,IAAI,MAAMwB,KAAQ1C,EAAKY,eAAeJ,SAASiC,GAAME,QAAUD,EAAKxB,EAAe,eAEnF,IAAI,MAAMwB,KAAQ1C,EAAKY,eAAeJ,SAASiC,GAAMG,MAAQF,EAAKxB,GAG1E,cAAclB,GACVA,EAAK2B,gBAAiB3B,EAAK4B,MAAMiB,eACX,CAAC7B,EAAKC,EAAKC,KAEJ,eAAgBA,EAAe,SAAIlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,GAC5E,YAAaA,EAAe,UAAIlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,MAEhHlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMmB,eACX,CAAC/B,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,eAAgBkB,MACvFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMoB,gBACX,CAAChC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,gBAAiBkB,MACxFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMqB,oBACX,CAACjC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,mBAAoBkB,MAC3FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMsB,kBACX,CAAClC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,MAC1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMuB,uBACX,CAACnC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,sBAAuBkB,MAC9FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMwB,gBACX,CAACpC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,gBAAiBkB,MACxFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMyB,4BACX,CAACrC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,0BAA2BkB,MAClGlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM0B,4BACX,CAACtC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,0BAA2BkB,MAClGlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM2B,eACX,CAACvC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,eAAgBkB,MACvFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM4B,kBACX,CAACxC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,MAC1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM6B,kBACX,CAACzC,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,MAC1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM8B,gCACX,CAAC1C,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,8BAA+BkB,MACtGlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM+B,SACX,CAAC3C,EAAKC,EAAKC,KACyB,UAA7BA,EAAe,SAAW,QAAalB,EAAK8C,gBAAgB9C,EAAM,gBAAiBkB,GACjD,OAA7BA,EAAe,SAAW,QAAUlB,EAAK8C,gBAAgB9C,EAAM,kBAAmBkB,GACrD,eAA7BA,EAAe,SAAW,SAAkBlB,EAAK8C,gBAAgB9C,EAAM,cAAekB,MAExHlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMgC,gDACX,CAAC5C,EAAKC,EAAKC,KAAWlB,EAAK8C,gBAAgB9C,EAAM,2CAA4CkB,MAGnHlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMiC,uBACX,CAAC7C,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,iBAAkBkB,MAEtFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMmC,uBACX,CAAC/C,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,iBAAkBkB,MAEtFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMoC,yBACX,CAAChD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,mBAAoBkB,MAExFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMqC,mBACX,CAACjD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,aAAckB,MAElFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMsC,qBACX,CAAClD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,cAAekB,MAEnFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMuC,uBACX,CAACnD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,gBAAiBkB,MAErFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMwC,iCACX,CAACpD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,wBAAyBkB,MAE7FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMyC,2BACX,CAACrD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,qBAAsBkB,MAE1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM0C,iBACX,CAACtD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,WAAYkB,MAEhFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM2C,8BACX,CAACvD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,qBAAsBkB,MAE1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM4C,mBACX,CAACxD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,aAAckB,MAElFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM6C,mBACX,CAACzD,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,aAAckB,MAElFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM8C,4BACX,CAAC1D,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,sBAAuBkB,MAE3FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAM+C,cACX,CAAC3D,EAAKC,EAAKC,KAE0B,SAA9BA,EAAe,SAAY,SAAYlB,EAAK8D,aAAa9D,EAAM,cAAekB,GAC5ElB,EAAK8C,gBAAgB9C,EAAM,cAAekB,MAGzElB,EAAK2B,gBAAiB3B,EAAK4B,MAAMgD,4CACX,CAAC5D,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,mCAAoCkB,MAExGlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMiD,6BACX,CAAC7D,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,uBAAwBkB,MAE5FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMkD,wBACX,CAAC9D,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,kBAAmBkB,MACvFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMmD,iCACX,CAAC/D,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,yBAA0BkB,MAC9FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMoD,2BACX,CAAChE,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,qBAAsBkB,MAC1FlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMqD,0BACX,CAACjE,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,oBAAqBkB,MACzFlB,EAAK2B,gBAAiB3B,EAAK4B,MAAMsD,uBACX,CAAClE,EAAKC,EAAKC,KAAWlB,EAAK8D,aAAa9D,EAAM,iBAAkBkB,OAiC9F,MAAMiE,UAA0BlF,EAAMkF,kBAClC,cACI/E,QACAC,KAAK+E,GACD,CAACC,GAAS1C,UAASC,YACf,IAAI,IAAIH,KAAS4C,aAAiBC,MAASD,EAAQ,CAACA,GAAQ,CACxD,KAAM5C,KAAQpC,MACV,MAAM,IAAIkF,eAAe,IAAI9C,EAAK,oBAInCpC,KAAKoC,IAA4C,IAAnC+C,OAAOC,KAAKpF,KAAKoC,IAAOiD,QAAgBrF,KAAKoC,GAAMkD,cAAgBH,SAASnF,KAAKoC,GAAQ,CAAEE,QAAS,GAAIC,MAAO,KAEhIvC,KAAKoC,GAAME,QAAQnB,KAAKmB,GACxBtC,KAAKoC,GAAMG,MAAMpB,KAAKoB,MAM1C,MAAM/B,UAA8BsE,EAChC,cACI/E,QAEAC,KAAKuF,gBAAkB,GACvBvF,KAAKwF,gBAAkB,GACvBxF,KAAKyF,aAAe,GACpBzF,KAAK0F,cAAgB,GACrB1F,KAAK2F,iBAAmB,GACxB3F,KAAK4F,gBAAkB,GACvB5F,KAAK6F,oBAAsB,GAC3B7F,KAAK8F,cAAgB,GACrB9F,KAAK+F,wBAA0B,GAC/B/F,KAAKgG,wBAA0B,GAC/BhG,KAAKiG,aAAe,GACpBjG,KAAKkG,gBAAkB,GACvBlG,KAAKmG,gBAAkB,GACvBnG,KAAKoG,4BAA8B,GAEnCpG,KAAKqG,gBAAkB,GACvBrG,KAAKsG,YAAc,GACnBtG,KAAKuG,cAAgB,GACrBvG,KAAKwG,yCAA2C,IAIxD,MAAM/F,UAA2BqE,EAC7B,cACI/E,QAEAC,KAAKyG,eAAiB,GACtBzG,KAAK0G,eAAiB,GACtB1G,KAAK2G,iBAAmB,GACxB3G,KAAK4G,WAAa,GAClB5G,KAAK6G,YAAc,GACnB7G,KAAK8G,cAAgB,GACrB9G,KAAK+G,sBAAwB,GAC7B/G,KAAKgH,mBAAqB,GAC1BhH,KAAKiH,SAAW,GAChBjH,KAAKkH,mBAAqB,GAC1BlH,KAAKmH,WAAa,GAClBnH,KAAKoH,WAAa,GAClBpH,KAAKqH,oBAAsB,GAC3BrH,KAAKsH,YAAc,GACnBtH,KAAKuH,iCAAmC,GACxCvH,KAAKwH,qBAAuB,GAC5BxH,KAAKyH,gBAAkB,GACvBzH,KAAK0H,uBAAyB,GAC9B1H,KAAK2H,mBAAqB,GAC1B3H,KAAK4H,kBAAoB,GACzB5H,KAAK6H,eAAiB,IAI9B,MAAMvH,EACF,YAAawH,GACT9H,KAAK+H,MAAQD,EAEb9H,KAAKyG,eACD,IACWzG,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMiC,uBAExExD,KAAK0G,eACD,CAAEsB,EAAaC,IACJjI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMmC,sBAAuB,CAAEsE,cAAaC,oBAE9GjI,KAAK4G,WACCsB,GACSlI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMqC,kBAAmB,CAAEsE,YAE7FlI,KAAK2G,iBACD,IACW3G,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMoC,yBAGxE3D,KAAKwH,qBACCW,GACSnI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMiD,4BAA6B,CAAE2D,yBAEvGnI,KAAKgH,mBACD,IACWhH,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMyC,2BAExEhE,KAAKuH,iCACCa,GACSpI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMgD,2CAA4C,CAAE6D,wBAEtHpI,KAAKqH,oBACCgB,GACSrI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM8C,2BAA4BgE,GAEpGrI,KAAKsI,mCACCC,GACSvI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMiH,4CAA6CD,GAErHvI,KAAKsH,YACD,IACWtH,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM+C,aAAc,CAAEmE,SAAU,UAElGzI,KAAK0I,cACD,CAAEC,EAASC,EAAaC,IACb7I,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMuH,qBAAsB,CAAEH,UAASC,cAAaC,uBAEtH7I,KAAK8G,cACD,CAAEiC,EAAqBC,IACZhJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMuC,sBAAuB,CAAEiF,sBAAqBC,+BAEtHhJ,KAAK+G,sBACD,CAAEkC,EAAaC,EAASC,IACbnJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMwC,gCAAiC,CAAEkF,cAAaC,UAASC,gCAEjInJ,KAAK6G,YACCuC,GACSpJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMsC,oBAAqB,CAAEuF,eAE/FpJ,KAAKmH,WACCkC,GACSrJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM4C,kBAAmB,CAAEkF,WAE7FrJ,KAAKoH,WACCiC,GACSrJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM6C,kBAAmB,CAAEiF,WAE7FrJ,KAAKiH,SACCqC,GACStJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM0C,gBAAiB,CAAEqF,WAE3FtJ,KAAKkH,mBACD,CAAEqC,EAAU,KAAMD,GAAO,IACdtJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM2C,6BAA8B,CAAEqF,YAAWD,WAEnHtJ,KAAKyH,gBACC6B,GACStJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMkD,uBAAwB,CAAE6E,WAElGtJ,KAAK0H,uBACC2B,GACSrJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMmD,gCAAiC,CAAE2E,WAE3GrJ,KAAK2H,mBACD,CAAE6B,EAAeC,IACNzJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMoD,0BAA2B,CAAE6E,gBAAeC,sBAEpHzJ,KAAK4H,kBACD,CAAE4B,EAAeC,IACNzJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMqD,yBAA0B,CAAE4E,gBAAeC,sBAEnHzJ,KAAK6H,eACC2B,GACSxJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMsD,sBAAuB,CAAE2E,mBAKzG,MAAMpJ,EACF,YAAY0H,GACR9H,KAAK+H,MAAQD,EAEb9H,KAAKuF,gBACD,IACWvF,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMiB,cAAe,MAEvFxC,KAAKwF,gBACD,CAAE5E,EAAK8I,IACI1J,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMiB,cAAe,CAAC5B,EAAK8I,IAG7F1J,KAAKyF,aACD,IACWzF,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMmB,eAExE1C,KAAK0F,cACCuD,GACSjJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMoB,eAAgB,CAAEsG,gBAE1FjJ,KAAK8F,cACCmD,GACSjJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMwB,eAAgB,CAAEkG,gBAE1FjJ,KAAK+F,wBACD,CAAEkD,EAAaU,IACJ3J,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMyB,2BAA4B,CAAEiG,cAAaU,iBAEnH3J,KAAKgG,wBACC4D,GACS5J,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM0B,2BAA4B,CAAE2G,eAEtG5J,KAAK4F,gBACD,CAAEqD,EAAaY,EAAeC,EAAeC,IAClC/J,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMsB,iBAAkB,CAAEoG,cAAaY,gBAAeC,gBAAeC,uBAEvI/J,KAAK6F,oBACD,IACW7F,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMuB,uBAExE9C,KAAK2F,iBACD,CAAEsD,EAAaK,IACJtJ,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMqB,mBAAoB,CAAEqG,cAAaK,WAE3GtJ,KAAKiG,aACD,CAAEgD,EAAaU,IACJ3J,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM2B,cAAe,CAAE+F,cAAaU,iBAEtG3J,KAAKmG,gBACD,CAAE8C,EAAaU,EAAcK,IAClBhK,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM6B,iBAAkB,CAAE6F,cAAaU,eAAcK,gBAEvHhK,KAAKoG,4BACD,CAAE6C,EAAaU,EAAcC,EAAYK,IAC9BjK,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM8B,+BAAgC,CAAE4F,cAAaU,eAAcC,aAAYK,kBAEjJjK,KAAKkG,gBACD,CAAE+C,EAAaU,EAAcO,EAAWD,EAAeE,EAAUC,IACtDpK,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM4B,iBAAkB,CAAE8F,cAAaU,eAAcO,YAAWD,gBAAeE,WAAUC,YAE3JpK,KAAKqG,gBACD,CAAEgE,EAAQC,EAAeC,IACdvK,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM+B,QAAS,CAAEkH,QAAS,MAAOH,SAAQC,gBAAeC,kBAE1HvK,KAAKuG,cACD,CAAE0C,EAAawB,EAAkBC,EAAajC,IACnCzI,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM+B,QAAS,CAAEkH,QAAS,SAAUvB,cAAawB,mBAAkBC,cAAajC,aAElJzI,KAAKsG,YACD,CAAEgE,EAAeC,EAAeI,IACrB3K,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAM+B,QAAS,CAAEkH,QAAS,cAAeF,gBAAeC,gBAAeI,YAEzI3K,KAAKwG,yCACD,CAAEyC,EAAaR,EAAUgC,IACdzK,KAAK+H,MAAMrH,KAAMV,KAAK+H,MAAMtG,WAAYzB,KAAK+H,MAAMxG,MAAMgC,+CAAgD,CAAE0F,cAAaR,WAAUgC,sBAOzJjL,EAAOD,QAAU,CACbO,OACA8K,gBA/RJ,MACI,YAAY9C,EAAM+C,GACd7K,KAAK+H,MAAQD,EACb9H,KAAK8K,IAAM,GACX9K,KAAK6K,cAAgBA,GAAiB,IAG1C,QAAQlK,EAAKC,EAAKC,GACdb,KAAK8K,IAAInK,GAAO,CAAEC,MAAKmK,KAAM/K,KAAKgL,eAAenK,GAAOoK,SAAU,IAGtE,YAAYtK,EAAKC,EAAKC,GAClB,KAAKF,KAAOX,KAAK8K,KAAO,MAAM,IAAI5F,eAAe,cAAcvE,WAAaC,8BAC5E,GAAGZ,KAAK8K,IAAInK,GAAKC,KAAOA,EAAM,MAAM,IAAIsE,eAAe,YAAYtE,oCAEnEC,EAAe,SAAIb,KAAKgL,eAAenK,EAAe,UACtDb,KAAK8K,IAAInK,GAAKsK,SAAS9J,KAAKN,GAGhC,eAAeA,GACX,IAAIqK,EAAU,GACd,IAAI,MAAMC,KAAOtK,EACW,iBAAdA,EAAKsK,KACXD,EAAQC,GAAQC,KAAKC,UAAUxK,EAAKsK,IAAM9F,QAAUrF,KAAK6K,cAAiBhK,EAAKsK,GAAO,iBAE9F,OAAOD,IAuQXpG,oBACAtE,wBACAC,qBACAH,kBACAF,uB,cC9cJ,MAAMkL,EAAc,EAAQ,MACtB,OAAEC,EAAM,OAAE5J,GAAW2J,EAAYE,WAAW,GAAG,IAC/CC,EAAY,oBACZC,EAAQ,EAAQ,KAChBC,EAAkB,EAAQ,KAC1B9L,EAAS,UAGf,MAAM+L,UAAkBC,MAEpB,YAAYC,EAASvJ,EAAM,QAASwJ,GACvChM,MAAM+L,EAASvJ,KAAUwJ,GAGzB5G,OAAO6G,eAAehM,KAAM,OAAQ,CAChCiM,cAAc,EACdC,YAAY,EACZC,MAAOnM,KAAKsF,YAAYlD,KACxBgK,UAAU,IAiBVP,MAAMQ,oBACNR,MAAMQ,kBAAkBrM,KAAMA,KAAKsF,aACnCtF,KAAKsM,MAAQ/J,EAdX,EAACgK,EAAmBC,KACvB,MAAMC,EAAiBF,EAAkBG,MAAM,MACzCC,EAAcH,EAAeE,MAAM,MACnCE,EAAa,GAOnB,OANAH,EAAeI,SAASC,IAChBH,EAAYI,SAASD,IAGzBF,EAAWzL,KAAK2L,MAEb,IAAIF,KAAeD,GAAaK,KAAK,OAItBC,CAAMjN,KAAKsM,MAAO/J,EAAM+J,OAAStM,KAAKsM,QAOhE,MAAMY,EACF,gBAIJ,MAAMC,UAA4BD,EAE9B,YAAYjL,EAAOJ,GACtB9B,QACAC,KAAKiC,MAAQA,EACbjC,KAAK6B,OAASA,GAgBf,MAAMK,EAAQiD,OAAOiI,OAAO,CACxBC,OAAS,EACPC,gBAAkB7B,EAAU8B,WAC5BpL,eAAiBsJ,EAAU+B,KAC3BC,aAAehC,EAAU8B,WACzBG,YAAcjC,EAAUkC,SAG9B,MAAM7I,EAEF,cACH9E,KAAK+E,GACD,CAACC,EAAO3C,KACX,IAAI,IAAID,KAAS4C,aAAiBC,MAASD,EAAQ,CAACA,GAAQ,CACxD,KAAM5C,KAAQpC,MACjB,MAAM,IAAIkF,eAAe,IAAI9C,EAAK,QAAQpC,KAAKsF,YAAYlD,MAExDpC,KAAKoC,GAAQC,KAQnB,MAAMuL,UAAgC9I,EAClC,OAAO1D,IACP,QAAQA,IACR,QAAQA,IACR,UAAUA,KAiMd5B,EAAOD,QAAU,CACbqM,YACAsB,YACAC,sBACAU,iBA7OJ,cAA+BX,EAE3B,YAAYvM,EAAKC,EAAKC,GACzBd,QACAC,KAAKW,IAAMA,EACXX,KAAKY,IAAMA,EACXZ,KAAKa,KAAOA,IAwOTqB,QACA4C,oBACA8I,0BACA9N,KArMJ,MAEI,cACHE,KAAK8N,IAAM,KACX9N,KAAKuB,MAAQ,KACbvB,KAAKuL,OAAS,KACdvL,KAAK2B,OAAS,KAEX3B,KAAKyB,SACD,KACI,IAAIsM,GAAU,IAAIC,MAAOC,UAKzB,OAJIF,GAAW/N,KAAKkO,WAChBH,EAAU/N,KAAKkO,SAAW,GAE9BlO,KAAKkO,SAAWH,EACTA,GAElB/N,KAAKmO,KACD,CAACC,EAASC,EAAO,KAAMC,EAAS,KAAetO,KAAKuO,MAAMvO,KAAMoO,EAASC,EAAMC,GACnFtO,KAAKwO,UACD,IAAcxO,KAAKyO,WAAWzO,MAClCA,KAAKU,KACD,CAACgO,EAAYC,EAAU9N,IAAiBb,KAAKgB,MAAMhB,KAAM0O,EAAYC,EAAU9N,GACnFb,KAAK4O,MACD,IAAc5O,KAAK6O,OAAO7O,MAE9BA,KAAK8O,qBAAuB,IAAIlB,EAEhC5N,KAAK+O,eAAiB,GACtB/O,KAAKsB,gBACD,CAACqN,EAAUzN,KAAalB,KAAK+O,eAAeJ,GAAYzN,GAC5DlB,KAAKgP,uBAAyB,CAACrO,EAAKC,EAAKC,OACzCb,KAAKiP,uBAAyB,CAACtO,EAAKC,EAAKC,OACzCb,KAAKkP,oBAAsB,CAACvO,EAAKC,EAAKC,EAAM0B,OAIzC,YACH,OAAIvC,KAAKmP,IACEnP,KAAKmP,IAAIC,WAETlN,EAAMmL,MAId,WAAW1N,EAAM0P,GAKpB,OAJW,MAAPA,IACA1P,EAAKmO,IAAMuB,EACX1P,EAAK4B,MAAQ5B,EAAKmO,IAAIvM,OAEnB,IAAI+N,SAAQ,SAASC,EAASC,GACjC,GAAI7P,EAAKwP,IAEZ,YADAI,EAAQ5P,GAGL,IAAI8P,EAAK,IAAIhE,EAAU9L,EAAKmO,IAAI4B,yBAChCD,EAAGE,WAAa,cAChBF,EAAGG,OACLxO,IACGqO,EAAGI,QACLzO,IAAWzB,EAAKmP,qBAAqBe,QAAQ,IAAI1C,EAAoB,UAAW/L,KAC9EqO,EAAGK,QACL1O,IAAWzB,EAAKmP,qBAAqBgB,QAAQ,IAAI3C,EAAoB,UAAW/L,KAC9EqO,EAAGM,UACL3O,IAAWzB,EAAKoC,WAAWpC,EAAM,IAAIwN,EAAoB,YAAa/L,KACpEzB,EAAKwP,IAAMM,EACX9P,EAAKqQ,aAAarQ,EAAMyB,GACxBzB,EAAKmP,qBAAqBc,OAAO,IAAIzC,EAAoB,SAAU/L,IACnEmO,EAAQ5P,IAET8P,EAAGI,QACLzO,IACGzB,EAAKmP,qBAAqBe,QAAQ,IAAI1C,EAAoB,UAAW/L,IACrEoO,EAAOpO,OAKT,MAAMzB,EAAMyO,EAASC,EAAMC,GAC9B,OAAO,IAAIgB,SAAQ,SAASC,EAASC,GACjC,GAAI7P,EAAKwP,IAEZ,YADAI,EAAQ5P,GAGL,IAAI+J,EAAgB,MAAR2E,EAAeA,EAAO,UAAU,CAAC,MAAM,KAAK,KAAK,KAAK,MAAM4B,QAAQ,UAAUC,IAAMA,EAAIvE,EAAgB,IAAIwE,WAAW,IAAI,GAAK,IAAMD,EAAI,GAAGE,SAAS,MAClK,IAAK,IAAKjF,EAAKgB,KAAUhH,OAAOkL,QAAQ/B,GAC3C5E,GAAS,IAAIyB,EAAI,IAAIgB,EAElBT,EAAM0C,EAAU1E,EAAO,CAAE4G,QAAS,CAAE,aAAc,MACpDC,MAAMC,GACIA,EAASC,SACjBF,MAAMlB,IAEL1P,EAAKmO,IAAMuB,EACX1P,EAAK4B,MAAQ5B,EAAKmO,IAAIvM,MAEtB,IAAIkO,EAAK,IAAIhE,EAAU9L,EAAKmO,IAAI4C,eAChCjB,EAAGE,WAAa,cAChBF,EAAGG,OACLxO,IACGqO,EAAGI,QACLzO,IAAWzB,EAAKmP,qBAAqBe,QAAQ,IAAI1C,EAAoB,UAAW/L,KAC9EqO,EAAGK,QACL1O,IAAWzB,EAAKmP,qBAAqBgB,QAAQ,IAAI3C,EAAoB,UAAW/L,KAC9EqO,EAAGM,UACL3O,IAAWzB,EAAKoC,WAAWpC,EAAM,IAAIwN,EAAoB,YAAa/L,KACpEzB,EAAKwP,IAAMM,EACX9P,EAAK0B,QAAQ1B,EAAMyB,GACnBzB,EAAKmP,qBAAqBc,OAAO,IAAIzC,EAAoB,SAAU/L,IACnEmO,EAAQ5P,IAET8P,EAAGI,QACLzO,IACGzB,EAAKmP,qBAAqBe,QAAQ,IAAI1C,EAAoB,UAAW/L,IACrEoO,EAAOpO,OAETuP,OAAQpO,IAEP5C,EAAKmP,qBAAqBe,QAAQ,IAAI1C,EAAoB,UAAW5K,IACrEiN,EAAOjN,SAKT,QAAQ5C,EAAMyB,GACjBzB,EAAK4L,OAASA,EACd5L,EAAKgC,OAASA,EACdhC,EAAKiR,iBAAkB,IAAI5C,MAAOC,UAAY,IAC9CtO,EAAKkR,YAAc,EACnBlR,EAAKmR,aAAe,EACpBnR,EAAKoR,YAAc,EACnBpR,EAAK2B,gBAAgBtB,KAAKuB,MAAMyP,kBAAkB,CAACrQ,EAAKC,EAAKC,KACzD,IAAIoQ,GAAkB,IAAIjD,MAAOC,UAAY,IACzCiD,EAAcrQ,EAAK,GACnBsQ,EAAkBtQ,EAAK,GACvBuQ,EAAcpR,KAAK4Q,gBAEnBS,GAAeF,EAAkBC,GAAgBH,EAAkBC,IAAc,EACjFI,GAAgBL,EAAkBG,GAAgBF,EAAcC,IAAkB,EACtFnR,KAAK6Q,aAAe7Q,KAAK6Q,YAAc7Q,KAAK+Q,YAAcM,IAAerR,KAAK+Q,YAAc,GAC5F/Q,KAAK8Q,cAAgB9Q,KAAK8Q,aAAe9Q,KAAK+Q,YAAcO,IAAgBtR,KAAK+Q,YAAc,GAC/F/Q,KAAK+Q,aAAe,KAGxB,IAAIpQ,EAAMhB,EAAK8B,WACXb,EAAMjB,EAAK4B,MAAMyP,iBACjB7E,EAAQxM,EAAKiR,gBACjBjR,EAAKe,KAAKC,EAAKC,EAAKuL,GAGjB,aAAaxM,EAAMyB,IAInB,MAAMzB,EAAM+O,EAAYC,EAAU9N,GACrC,MAAM0Q,EAAU5R,EAAK4L,OAAO,CAACmD,EAAYC,EAAU9N,IAEnD,OADAlB,EAAKwP,IAAIzO,KAAK6Q,GACP7C,EAGJ,OAAO/O,GACV,IACQA,EAAKwP,KACZxP,EAAKwP,IAAIP,QAER,QACEjP,EAAKwP,IAAM,MAIZ,WAAWxP,EAAMyB,GACpB,IACIzB,EAAKmP,qBAAqBiB,UAAU3O,GACpC,MAAOT,EAAKC,EAAKC,GAAQlB,EAAKgC,OAAO9B,EAAO+B,KAAKR,EAAMS,OAAOhB,OAC9D,IACHlB,EAAKqP,uBAAuBrO,EAAKC,EAAKC,IACxBD,KAAOjB,EAAKoP,eAAkBpP,EAAKoP,eAAenO,GAAOjB,EAAKsP,wBACrEtO,EAAKC,EAAKC,GACZ,MAAM0B,GACX5C,EAAKuP,oBAAoBvO,EAAKC,EAAKC,EAAM0B,IAG1C,MAAOA,GACH5C,EAAKuP,qBAAqB,GAAI,EAAG,KAAM3M,Q,yBC5R5ChD,EAAQiS,WAuCR,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClDtS,EAAQuS,YAiDR,SAAsBL,GACpB,IAAIM,EAcAC,EAbAN,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBO,EAAM,IAAIC,EAVhB,SAAsBT,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BM,CAAYV,EAAKG,EAAUC,IAEzCO,EAAU,EAGVC,EAAMR,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKI,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACxBD,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,GACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACrCM,EAAUb,EAAIc,WAAWP,EAAI,IAC/BC,EAAIG,KAAcL,GAAO,GAAM,IAC/BE,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,EAmBnB,OAhBwB,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,EAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAmB,IAANL,GAGK,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,GAGZE,GA3FT1S,EAAQiT,cAkHR,SAAwBC,GAQtB,IAPA,IAAIV,EACAM,EAAMI,EAAMpN,OACZqN,EAAaL,EAAM,EACnBM,EAAQ,GACRC,EAAiB,MAGZZ,EAAI,EAAGa,EAAOR,EAAMK,EAAYV,EAAIa,EAAMb,GAAKY,EACtDD,EAAMxR,KAAK2R,EAAYL,EAAOT,EAAIA,EAAIY,EAAkBC,EAAOA,EAAQb,EAAIY,IAqB7E,OAjBmB,IAAfF,GACFX,EAAMU,EAAMJ,EAAM,GAClBM,EAAMxR,KACJ4R,EAAOhB,GAAO,GACdgB,EAAQhB,GAAO,EAAK,IACpB,OAEsB,IAAfW,IACTX,GAAOU,EAAMJ,EAAM,IAAM,GAAKI,EAAMJ,EAAM,GAC1CM,EAAMxR,KACJ4R,EAAOhB,GAAO,IACdgB,EAAQhB,GAAO,EAAK,IACpBgB,EAAQhB,GAAO,EAAK,IACpB,MAIGY,EAAM3F,KAAK,KAzIpB,IALA,IAAI+F,EAAS,GACTT,EAAY,GACZJ,EAA4B,oBAAf/B,WAA6BA,WAAalL,MAEvD+N,EAAO,mEACFhB,EAAI,EAAGK,EAAMW,EAAK3N,OAAQ2M,EAAIK,IAAOL,EAC5Ce,EAAOf,GAAKgB,EAAKhB,GACjBM,EAAUU,EAAKT,WAAWP,IAAMA,EAQlC,SAASL,EAASF,GAChB,IAAIY,EAAMZ,EAAIpM,OAEd,GAAIgN,EAAM,EAAI,EACZ,MAAM,IAAIxG,MAAM,kDAKlB,IAAI+F,EAAWH,EAAIwB,QAAQ,KAO3B,OANkB,IAAdrB,IAAiBA,EAAWS,GAMzB,CAACT,EAJcA,IAAaS,EAC/B,EACA,EAAKT,EAAW,GAsEtB,SAASkB,EAAaL,EAAOS,EAAOC,GAGlC,IAFA,IAAIpB,EARoBqB,EASpBC,EAAS,GACJrB,EAAIkB,EAAOlB,EAAImB,EAAKnB,GAAK,EAChCD,GACIU,EAAMT,IAAM,GAAM,WAClBS,EAAMT,EAAI,IAAM,EAAK,QACP,IAAfS,EAAMT,EAAI,IACbqB,EAAOlS,KAdF4R,GADiBK,EAeMrB,IAdT,GAAK,IACxBgB,EAAOK,GAAO,GAAK,IACnBL,EAAOK,GAAO,EAAI,IAClBL,EAAa,GAANK,IAaT,OAAOC,EAAOrG,KAAK,IAjGrBsF,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,I,+BCT3Be,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClBC,EACiB,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENlU,EAAQ,GAASM,EAEjBN,EAAQ,GAAoB,GAE5B,IAAImU,EAAe,WAwDnB,SAASC,EAActO,GACrB,GAAIA,EAASqO,EACX,MAAM,IAAIE,WAAW,cAAgBvO,EAAS,kCAGhD,IAAIwO,EAAM,IAAI1D,WAAW9K,GAEzB,OADAF,OAAO2O,eAAeD,EAAKhU,EAAOkU,WAC3BF,EAaT,SAAShU,EAAQmU,EAAKC,EAAkB5O,GAEtC,GAAmB,iBAAR2O,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,GAErB,OAAOpS,EAAKoS,EAAKC,EAAkB5O,GAKrC,SAASzD,EAAMuK,EAAO8H,EAAkB5O,GACtC,GAAqB,iBAAV8G,EACT,OAuHJ,SAAqBiI,EAAQC,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRxU,EAAOyU,WAAWD,GACrB,MAAM,IAAIH,UAAU,qBAAuBG,GAG7C,IAAIhP,EAAwC,EAA/BmM,EAAW4C,EAAQC,GAC5BR,EAAMF,EAAatO,GAEnBkP,EAASV,EAAIW,MAAMJ,EAAQC,GAS/B,OAPIE,IAAWlP,IAIbwO,EAAMA,EAAIY,MAAM,EAAGF,IAGdV,EA5IEa,CAAWvI,EAAO8H,GAG3B,GAAIU,YAAYC,OAAOzI,GACrB,OAoJJ,SAAwB0I,GACtB,GAAIC,EAAWD,EAAW1E,YAAa,CACrC,IAAI4E,EAAO,IAAI5E,WAAW0E,GAC1B,OAAOG,EAAgBD,EAAKE,OAAQF,EAAKG,WAAYH,EAAKvD,YAE5D,OAAO2D,EAAcN,GAzJZO,CAAcjJ,GAGvB,GAAa,MAATA,EACF,MAAM,IAAI+H,UACR,yHACiD/H,GAIrD,GAAI2I,EAAW3I,EAAOwI,cACjBxI,GAAS2I,EAAW3I,EAAM8I,OAAQN,aACrC,OAAOK,EAAgB7I,EAAO8H,EAAkB5O,GAGlD,GAAiC,oBAAtBgQ,oBACNP,EAAW3I,EAAOkJ,oBAClBlJ,GAAS2I,EAAW3I,EAAM8I,OAAQI,oBACrC,OAAOL,EAAgB7I,EAAO8H,EAAkB5O,GAGlD,GAAqB,iBAAV8G,EACT,MAAM,IAAI+H,UACR,yEAIJ,IAAIoB,EAAUnJ,EAAMmJ,SAAWnJ,EAAMmJ,UACrC,GAAe,MAAXA,GAAmBA,IAAYnJ,EACjC,OAAOtM,EAAO+B,KAAK0T,EAASrB,EAAkB5O,GAGhD,IAAIkQ,EAoJN,SAAqBC,GACnB,GAAI3V,EAAO4V,SAASD,GAAM,CACxB,IAAInD,EAA4B,EAAtBqD,EAAQF,EAAInQ,QAClBwO,EAAMF,EAAatB,GAEvB,OAAmB,IAAfwB,EAAIxO,QAIRmQ,EAAIT,KAAKlB,EAAK,EAAG,EAAGxB,GAHXwB,EAOX,YAAmB8B,IAAfH,EAAInQ,OACoB,iBAAfmQ,EAAInQ,QAAuBuQ,EAAYJ,EAAInQ,QAC7CsO,EAAa,GAEfwB,EAAcK,GAGN,WAAbA,EAAIK,MAAqB5Q,MAAM6Q,QAAQN,EAAI3U,MACtCsU,EAAcK,EAAI3U,WAD3B,EAxKQkV,CAAW5J,GACnB,GAAIoJ,EAAG,OAAOA,EAEd,GAAsB,oBAAX9B,QAAgD,MAAtBA,OAAOuC,aACH,mBAA9B7J,EAAMsH,OAAOuC,aACtB,OAAOnW,EAAO+B,KACZuK,EAAMsH,OAAOuC,aAAa,UAAW/B,EAAkB5O,GAI3D,MAAM,IAAI6O,UACR,yHACiD/H,GAqBrD,SAAS8J,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIhC,UAAU,0CACf,GAAIgC,EAAO,EAChB,MAAM,IAAItC,WAAW,cAAgBsC,EAAO,kCA4BhD,SAAS/B,EAAa+B,GAEpB,OADAD,EAAWC,GACJvC,EAAauC,EAAO,EAAI,EAAoB,EAAhBR,EAAQQ,IAwC7C,SAASf,EAAegB,GAGtB,IAFA,IAAI9Q,EAAS8Q,EAAM9Q,OAAS,EAAI,EAA4B,EAAxBqQ,EAAQS,EAAM9Q,QAC9CwO,EAAMF,EAAatO,GACd2M,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B6B,EAAI7B,GAAgB,IAAXmE,EAAMnE,GAEjB,OAAO6B,EAWT,SAASmB,EAAiBmB,EAAOjB,EAAY7P,GAC3C,GAAI6P,EAAa,GAAKiB,EAAM3E,WAAa0D,EACvC,MAAM,IAAItB,WAAW,wCAGvB,GAAIuC,EAAM3E,WAAa0D,GAAc7P,GAAU,GAC7C,MAAM,IAAIuO,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiB8B,IAAfT,QAAuCS,IAAXtQ,EACxB,IAAI8K,WAAWgG,QACDR,IAAXtQ,EACH,IAAI8K,WAAWgG,EAAOjB,GAEtB,IAAI/E,WAAWgG,EAAOjB,EAAY7P,GAI1CF,OAAO2O,eAAeD,EAAKhU,EAAOkU,WAE3BF,EA4BT,SAAS6B,EAASrQ,GAGhB,GAAIA,GAAUqO,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAatD,SAAS,IAAM,UAEhE,OAAgB,EAAT/K,EAsGT,SAASmM,EAAY4C,EAAQC,GAC3B,GAAIxU,EAAO4V,SAASrB,GAClB,OAAOA,EAAO/O,OAEhB,GAAIsP,YAAYC,OAAOR,IAAWU,EAAWV,EAAQO,aACnD,OAAOP,EAAO5C,WAEhB,GAAsB,iBAAX4C,EACT,MAAM,IAAIF,UACR,kGAC0BE,GAI9B,IAAI/B,EAAM+B,EAAO/O,OACb+Q,EAAaC,UAAUhR,OAAS,IAAsB,IAAjBgR,UAAU,GACnD,IAAKD,GAAqB,IAAR/D,EAAW,OAAO,EAIpC,IADA,IAAIiE,GAAc,IAEhB,OAAQjC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOhC,EACT,IAAK,OACL,IAAK,QACH,OAAOkE,EAAYnC,GAAQ/O,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANgN,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOmE,EAAcpC,GAAQ/O,OAC/B,QACE,GAAIiR,EACF,OAAOF,GAAa,EAAIG,EAAYnC,GAAQ/O,OAE9CgP,GAAY,GAAKA,GAAUoC,cAC3BH,GAAc,GAMtB,SAASI,EAAcrC,EAAUnB,EAAOC,GACtC,IAAImD,GAAc,EAclB,SALcX,IAAVzC,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQlT,KAAKqF,OACf,MAAO,GAOT,SAJYsQ,IAARxC,GAAqBA,EAAMnT,KAAKqF,UAClC8N,EAAMnT,KAAKqF,QAGT8N,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKmB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOsC,EAAS3W,KAAMkT,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOyD,EAAU5W,KAAMkT,EAAOC,GAEhC,IAAK,QACH,OAAO0D,EAAW7W,KAAMkT,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAO2D,EAAY9W,KAAMkT,EAAOC,GAElC,IAAK,SACH,OAAO4D,EAAY/W,KAAMkT,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO6D,EAAahX,KAAMkT,EAAOC,GAEnC,QACE,GAAImD,EAAa,MAAM,IAAIpC,UAAU,qBAAuBG,GAC5DA,GAAYA,EAAW,IAAIoC,cAC3BH,GAAc,GAatB,SAASW,EAAM1B,EAAG2B,EAAGC,GACnB,IAAInF,EAAIuD,EAAE2B,GACV3B,EAAE2B,GAAK3B,EAAE4B,GACT5B,EAAE4B,GAAKnF,EA4IT,SAASoF,EAAsBnC,EAAQoC,EAAKnC,EAAYb,EAAUiD,GAEhE,GAAsB,IAAlBrC,EAAO5P,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAf6P,GACTb,EAAWa,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZU,EADJV,GAAcA,KAGZA,EAAaoC,EAAM,EAAKrC,EAAO5P,OAAS,GAItC6P,EAAa,IAAGA,EAAaD,EAAO5P,OAAS6P,GAC7CA,GAAcD,EAAO5P,OAAQ,CAC/B,GAAIiS,EAAK,OAAQ,EACZpC,EAAaD,EAAO5P,OAAS,OAC7B,GAAI6P,EAAa,EAAG,CACzB,IAAIoC,EACC,OAAQ,EADJpC,EAAa,EAUxB,GALmB,iBAARmC,IACTA,EAAMxX,EAAO+B,KAAKyV,EAAKhD,IAIrBxU,EAAO4V,SAAS4B,GAElB,OAAmB,IAAfA,EAAIhS,QACE,EAEHkS,EAAatC,EAAQoC,EAAKnC,EAAYb,EAAUiD,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjClH,WAAW4D,UAAUd,QAC1BqE,EACKnH,WAAW4D,UAAUd,QAAQuE,KAAKvC,EAAQoC,EAAKnC,GAE/C/E,WAAW4D,UAAU0D,YAAYD,KAAKvC,EAAQoC,EAAKnC,GAGvDqC,EAAatC,EAAQ,CAACoC,GAAMnC,EAAYb,EAAUiD,GAG3D,MAAM,IAAIpD,UAAU,wCAGtB,SAASqD,EAActF,EAAKoF,EAAKnC,EAAYb,EAAUiD,GACrD,IA0BItF,EA1BA0F,EAAY,EACZC,EAAY1F,EAAI5M,OAChBuS,EAAYP,EAAIhS,OAEpB,QAAiBsQ,IAAbtB,IAEe,UADjBA,EAAWwD,OAAOxD,GAAUoC,gBACY,UAAbpC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIpC,EAAI5M,OAAS,GAAKgS,EAAIhS,OAAS,EACjC,OAAQ,EAEVqS,EAAY,EACZC,GAAa,EACbC,GAAa,EACb1C,GAAc,EAIlB,SAAS4C,EAAMjE,EAAK7B,GAClB,OAAkB,IAAd0F,EACK7D,EAAI7B,GAEJ6B,EAAIkE,aAAa/F,EAAI0F,GAKhC,GAAIJ,EAAK,CACP,IAAIU,GAAc,EAClB,IAAKhG,EAAIkD,EAAYlD,EAAI2F,EAAW3F,IAClC,GAAI8F,EAAK7F,EAAKD,KAAO8F,EAAKT,GAAqB,IAAhBW,EAAoB,EAAIhG,EAAIgG,IAEzD,IADoB,IAAhBA,IAAmBA,EAAahG,GAChCA,EAAIgG,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBhG,GAAKA,EAAIgG,GAChCA,GAAc,OAKlB,IADI9C,EAAa0C,EAAYD,IAAWzC,EAAayC,EAAYC,GAC5D5F,EAAIkD,EAAYlD,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIiG,GAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAK7F,EAAKD,EAAIkG,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOjG,EAItB,OAAQ,EAeV,SAASmG,EAAUtE,EAAKO,EAAQgE,EAAQ/S,GACtC+S,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAYzE,EAAIxO,OAAS+S,EACxB/S,GAGHA,EAASgT,OAAOhT,IACHiT,IACXjT,EAASiT,GAJXjT,EAASiT,EAQX,IAAIC,EAASnE,EAAO/O,OAEhBA,EAASkT,EAAS,IACpBlT,EAASkT,EAAS,GAEpB,IAAK,IAAIvG,EAAI,EAAGA,EAAI3M,IAAU2M,EAAG,CAC/B,IAAIwG,EAASC,SAASrE,EAAOsE,OAAW,EAAJ1G,EAAO,GAAI,IAC/C,GAAI4D,EAAY4C,GAAS,OAAOxG,EAChC6B,EAAIuE,EAASpG,GAAKwG,EAEpB,OAAOxG,EAGT,SAAS2G,EAAW9E,EAAKO,EAAQgE,EAAQ/S,GACvC,OAAOuT,EAAWrC,EAAYnC,EAAQP,EAAIxO,OAAS+S,GAASvE,EAAKuE,EAAQ/S,GAG3E,SAASwT,EAAYhF,EAAKO,EAAQgE,EAAQ/S,GACxC,OAAOuT,EAk4BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACP/G,EAAI,EAAGA,EAAI8G,EAAIzT,SAAU2M,EAEhC+G,EAAU5X,KAAyB,IAApB2X,EAAIvG,WAAWP,IAEhC,OAAO+G,EAx4BWC,CAAa5E,GAASP,EAAKuE,EAAQ/S,GAGvD,SAAS4T,EAAapF,EAAKO,EAAQgE,EAAQ/S,GACzC,OAAOuT,EAAWpC,EAAcpC,GAASP,EAAKuE,EAAQ/S,GAGxD,SAAS6T,EAAWrF,EAAKO,EAAQgE,EAAQ/S,GACvC,OAAOuT,EAm4BT,SAAyBE,EAAKK,GAG5B,IAFA,IAAIjJ,EAAGkJ,EAAIC,EACPN,EAAY,GACP/G,EAAI,EAAGA,EAAI8G,EAAIzT,WACjB8T,GAAS,GAAK,KADanH,EAIhCoH,GADAlJ,EAAI4I,EAAIvG,WAAWP,KACT,EACVqH,EAAKnJ,EAAI,IACT6I,EAAU5X,KAAKkY,GACfN,EAAU5X,KAAKiY,GAGjB,OAAOL,EAh5BWO,CAAelF,EAAQP,EAAIxO,OAAS+S,GAASvE,EAAKuE,EAAQ/S,GA+E9E,SAAS0R,EAAalD,EAAKX,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQU,EAAIxO,OACtBiO,EAAOd,cAAcqB,GAErBP,EAAOd,cAAcqB,EAAIY,MAAMvB,EAAOC,IAIjD,SAASyD,EAAW/C,EAAKX,EAAOC,GAC9BA,EAAMoG,KAAKC,IAAI3F,EAAIxO,OAAQ8N,GAI3B,IAHA,IAAIsG,EAAM,GAENzH,EAAIkB,EACDlB,EAAImB,GAAK,CACd,IAWMuG,EAAYC,EAAWC,EAAYC,EAXrCC,EAAYjG,EAAI7B,GAChB+H,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI9H,EAAIgI,GAAoB7G,EAG1B,OAAQ6G,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAa7F,EAAI7B,EAAI,OAEnB6H,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa7F,EAAI7B,EAAI,GACrB2H,EAAY9F,EAAI7B,EAAI,GACQ,MAAV,IAAb0H,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa7F,EAAI7B,EAAI,GACrB2H,EAAY9F,EAAI7B,EAAI,GACpB4H,EAAa/F,EAAI7B,EAAI,GACO,MAAV,IAAb0H,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAItY,KAAK4Y,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAItY,KAAK4Y,GACT/H,GAAKgI,EAGP,OAQF,SAAgCC,GAC9B,IAAI5H,EAAM4H,EAAW5U,OACrB,GAAIgN,GAAO6H,EACT,OAAOrC,OAAOsC,aAAaC,MAAMvC,OAAQoC,GAM3C,IAFA,IAAIR,EAAM,GACNzH,EAAI,EACDA,EAAIK,GACToH,GAAO5B,OAAOsC,aAAaC,MACzBvC,OACAoC,EAAWxF,MAAMzC,EAAGA,GAAKkI,IAG7B,OAAOT,EAvBAY,CAAsBZ,GA19B/B5Z,EAAOya,oBAUP,WAEE,IACE,IAAIrI,EAAM,IAAI9B,WAAW,GACrBoK,EAAQ,CAAEC,IAAK,WAAc,OAAO,KAGxC,OAFArV,OAAO2O,eAAeyG,EAAOpK,WAAW4D,WACxC5O,OAAO2O,eAAe7B,EAAKsI,GACN,KAAdtI,EAAIuI,MACX,MAAOC,GACP,OAAO,GAnBkBC,GAExB7a,EAAOya,qBAA0C,oBAAZK,SACb,mBAAlBA,QAAQpY,OACjBoY,QAAQpY,MACN,iJAkBJ4C,OAAO6G,eAAenM,EAAOkU,UAAW,SAAU,CAChD7H,YAAY,EACZ0O,IAAK,WACH,GAAK/a,EAAO4V,SAASzV,MACrB,OAAOA,KAAKiV,UAIhB9P,OAAO6G,eAAenM,EAAOkU,UAAW,SAAU,CAChD7H,YAAY,EACZ0O,IAAK,WACH,GAAK/a,EAAO4V,SAASzV,MACrB,OAAOA,KAAKkV,cAqChBrV,EAAOgb,SAAW,KAgElBhb,EAAO+B,KAAO,SAAUuK,EAAO8H,EAAkB5O,GAC/C,OAAOzD,EAAKuK,EAAO8H,EAAkB5O,IAKvCF,OAAO2O,eAAejU,EAAOkU,UAAW5D,WAAW4D,WACnD5O,OAAO2O,eAAejU,EAAQsQ,YA8B9BtQ,EAAOib,MAAQ,SAAU5E,EAAM6E,EAAM1G,GACnC,OArBF,SAAgB6B,EAAM6E,EAAM1G,GAE1B,OADA4B,EAAWC,GACPA,GAAQ,EACHvC,EAAauC,QAETP,IAAToF,EAIyB,iBAAb1G,EACVV,EAAauC,GAAM6E,KAAKA,EAAM1G,GAC9BV,EAAauC,GAAM6E,KAAKA,GAEvBpH,EAAauC,GAQb4E,CAAM5E,EAAM6E,EAAM1G,IAW3BxU,EAAOsU,YAAc,SAAU+B,GAC7B,OAAO/B,EAAY+B,IAKrBrW,EAAOmb,gBAAkB,SAAU9E,GACjC,OAAO/B,EAAY+B,IA8GrBrW,EAAO4V,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAE0F,WACpB1F,IAAM1V,EAAOkU,WAGjBlU,EAAOqb,QAAU,SAAkBC,EAAG5F,GAGpC,GAFIT,EAAWqG,EAAGhL,cAAagL,EAAItb,EAAO+B,KAAKuZ,EAAGA,EAAE/C,OAAQ+C,EAAE3J,aAC1DsD,EAAWS,EAAGpF,cAAaoF,EAAI1V,EAAO+B,KAAK2T,EAAGA,EAAE6C,OAAQ7C,EAAE/D,cACzD3R,EAAO4V,SAAS0F,KAAOtb,EAAO4V,SAASF,GAC1C,MAAM,IAAIrB,UACR,yEAIJ,GAAIiH,IAAM5F,EAAG,OAAO,EAKpB,IAHA,IAAI6F,EAAID,EAAE9V,OACNgW,EAAI9F,EAAElQ,OAED2M,EAAI,EAAGK,EAAMkH,KAAKC,IAAI4B,EAAGC,GAAIrJ,EAAIK,IAAOL,EAC/C,GAAImJ,EAAEnJ,KAAOuD,EAAEvD,GAAI,CACjBoJ,EAAID,EAAEnJ,GACNqJ,EAAI9F,EAAEvD,GACN,MAIJ,OAAIoJ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTvb,EAAOyU,WAAa,SAAqBD,GACvC,OAAQwD,OAAOxD,GAAUoC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIb5W,EAAOyb,OAAS,SAAiBC,EAAMlW,GACrC,IAAKJ,MAAM6Q,QAAQyF,GACjB,MAAM,IAAIrH,UAAU,+CAGtB,GAAoB,IAAhBqH,EAAKlW,OACP,OAAOxF,EAAOib,MAAM,GAGtB,IAAI9I,EACJ,QAAe2D,IAAXtQ,EAEF,IADAA,EAAS,EACJ2M,EAAI,EAAGA,EAAIuJ,EAAKlW,SAAU2M,EAC7B3M,GAAUkW,EAAKvJ,GAAG3M,OAItB,IAAI4P,EAASpV,EAAOsU,YAAY9O,GAC5BmW,EAAM,EACV,IAAKxJ,EAAI,EAAGA,EAAIuJ,EAAKlW,SAAU2M,EAAG,CAChC,IAAI6B,EAAM0H,EAAKvJ,GACf,GAAI8C,EAAWjB,EAAK1D,YACdqL,EAAM3H,EAAIxO,OAAS4P,EAAO5P,OAC5BxF,EAAO+B,KAAKiS,GAAKkB,KAAKE,EAAQuG,GAE9BrL,WAAW4D,UAAU0H,IAAIjE,KACvBvC,EACApB,EACA2H,OAGC,KAAK3b,EAAO4V,SAAS5B,GAC1B,MAAM,IAAIK,UAAU,+CAEpBL,EAAIkB,KAAKE,EAAQuG,GAEnBA,GAAO3H,EAAIxO,OAEb,OAAO4P,GAkDTpV,EAAO2R,WAAaA,EA8EpB3R,EAAOkU,UAAUkH,WAAY,EAQ7Bpb,EAAOkU,UAAU2H,OAAS,WACxB,IAAIrJ,EAAMrS,KAAKqF,OACf,GAAIgN,EAAM,GAAM,EACd,MAAM,IAAIuB,WAAW,6CAEvB,IAAK,IAAI5B,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5BiF,EAAKjX,KAAMgS,EAAGA,EAAI,GAEpB,OAAOhS,MAGTH,EAAOkU,UAAU4H,OAAS,WACxB,IAAItJ,EAAMrS,KAAKqF,OACf,GAAIgN,EAAM,GAAM,EACd,MAAM,IAAIuB,WAAW,6CAEvB,IAAK,IAAI5B,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5BiF,EAAKjX,KAAMgS,EAAGA,EAAI,GAClBiF,EAAKjX,KAAMgS,EAAI,EAAGA,EAAI,GAExB,OAAOhS,MAGTH,EAAOkU,UAAU6H,OAAS,WACxB,IAAIvJ,EAAMrS,KAAKqF,OACf,GAAIgN,EAAM,GAAM,EACd,MAAM,IAAIuB,WAAW,6CAEvB,IAAK,IAAI5B,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5BiF,EAAKjX,KAAMgS,EAAGA,EAAI,GAClBiF,EAAKjX,KAAMgS,EAAI,EAAGA,EAAI,GACtBiF,EAAKjX,KAAMgS,EAAI,EAAGA,EAAI,GACtBiF,EAAKjX,KAAMgS,EAAI,EAAGA,EAAI,GAExB,OAAOhS,MAGTH,EAAOkU,UAAU3D,SAAW,WAC1B,IAAI/K,EAASrF,KAAKqF,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBgR,UAAUhR,OAAqBuR,EAAU5W,KAAM,EAAGqF,GAC/CqR,EAAa0D,MAAMpa,KAAMqW,YAGlCxW,EAAOkU,UAAU8H,eAAiBhc,EAAOkU,UAAU3D,SAEnDvQ,EAAOkU,UAAU+H,OAAS,SAAiBvG,GACzC,IAAK1V,EAAO4V,SAASF,GAAI,MAAM,IAAIrB,UAAU,6BAC7C,OAAIlU,OAASuV,GACsB,IAA5B1V,EAAOqb,QAAQlb,KAAMuV,IAG9B1V,EAAOkU,UAAUgI,QAAU,WACzB,IAAIjD,EAAM,GACNkD,EAAMzc,EAAQ,GAGlB,OAFAuZ,EAAM9Y,KAAKoQ,SAAS,MAAO,EAAG4L,GAAK/L,QAAQ,UAAW,OAAOgM,OACzDjc,KAAKqF,OAAS2W,IAAKlD,GAAO,SACvB,WAAaA,EAAM,KAExBtF,IACF3T,EAAOkU,UAAUP,GAAuB3T,EAAOkU,UAAUgI,SAG3Dlc,EAAOkU,UAAUmH,QAAU,SAAkBgB,EAAQhJ,EAAOC,EAAKgJ,EAAWC,GAI1E,GAHItH,EAAWoH,EAAQ/L,cACrB+L,EAASrc,EAAO+B,KAAKsa,EAAQA,EAAO9D,OAAQ8D,EAAO1K,cAEhD3R,EAAO4V,SAASyG,GACnB,MAAM,IAAIhI,UACR,wFAC2BgI,GAiB/B,QAbcvG,IAAVzC,IACFA,EAAQ,QAEEyC,IAARxC,IACFA,EAAM+I,EAASA,EAAO7W,OAAS,QAEfsQ,IAAdwG,IACFA,EAAY,QAEExG,IAAZyG,IACFA,EAAUpc,KAAKqF,QAGb6N,EAAQ,GAAKC,EAAM+I,EAAO7W,QAAU8W,EAAY,GAAKC,EAAUpc,KAAKqF,OACtE,MAAM,IAAIuO,WAAW,sBAGvB,GAAIuI,GAAaC,GAAWlJ,GAASC,EACnC,OAAO,EAET,GAAIgJ,GAAaC,EACf,OAAQ,EAEV,GAAIlJ,GAASC,EACX,OAAO,EAQT,GAAInT,OAASkc,EAAQ,OAAO,EAS5B,IAPA,IAAId,GAJJgB,KAAa,IADbD,KAAe,GAMXd,GAPJlI,KAAS,IADTD,KAAW,GASPb,EAAMkH,KAAKC,IAAI4B,EAAGC,GAElBgB,EAAWrc,KAAKyU,MAAM0H,EAAWC,GACjCE,EAAaJ,EAAOzH,MAAMvB,EAAOC,GAE5BnB,EAAI,EAAGA,EAAIK,IAAOL,EACzB,GAAIqK,EAASrK,KAAOsK,EAAWtK,GAAI,CACjCoJ,EAAIiB,EAASrK,GACbqJ,EAAIiB,EAAWtK,GACf,MAIJ,OAAIoJ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA4HTvb,EAAOkU,UAAUhH,SAAW,SAAmBsK,EAAKnC,EAAYb,GAC9D,OAAoD,IAA7CrU,KAAKiT,QAAQoE,EAAKnC,EAAYb,IAGvCxU,EAAOkU,UAAUd,QAAU,SAAkBoE,EAAKnC,EAAYb,GAC5D,OAAO+C,EAAqBpX,KAAMqX,EAAKnC,EAAYb,GAAU,IAG/DxU,EAAOkU,UAAU0D,YAAc,SAAsBJ,EAAKnC,EAAYb,GACpE,OAAO+C,EAAqBpX,KAAMqX,EAAKnC,EAAYb,GAAU,IA4C/DxU,EAAOkU,UAAUS,MAAQ,SAAgBJ,EAAQgE,EAAQ/S,EAAQgP,GAE/D,QAAesB,IAAXyC,EACF/D,EAAW,OACXhP,EAASrF,KAAKqF,OACd+S,EAAS,OAEJ,QAAezC,IAAXtQ,GAA0C,iBAAX+S,EACxC/D,EAAW+D,EACX/S,EAASrF,KAAKqF,OACd+S,EAAS,MAEJ,KAAImE,SAASnE,GAUlB,MAAM,IAAIvM,MACR,2EAVFuM,KAAoB,EAChBmE,SAASlX,IACXA,KAAoB,OACHsQ,IAAbtB,IAAwBA,EAAW,UAEvCA,EAAWhP,EACXA,OAASsQ,GAQb,IAAI2C,EAAYtY,KAAKqF,OAAS+S,EAG9B,SAFezC,IAAXtQ,GAAwBA,EAASiT,KAAWjT,EAASiT,GAEpDlE,EAAO/O,OAAS,IAAMA,EAAS,GAAK+S,EAAS,IAAOA,EAASpY,KAAKqF,OACrE,MAAM,IAAIuO,WAAW,0CAGlBS,IAAUA,EAAW,QAG1B,IADA,IAAIiC,GAAc,IAEhB,OAAQjC,GACN,IAAK,MACH,OAAO8D,EAASnY,KAAMoU,EAAQgE,EAAQ/S,GAExC,IAAK,OACL,IAAK,QACH,OAAOsT,EAAU3Y,KAAMoU,EAAQgE,EAAQ/S,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOwT,EAAW7Y,KAAMoU,EAAQgE,EAAQ/S,GAE1C,IAAK,SAEH,OAAO4T,EAAYjZ,KAAMoU,EAAQgE,EAAQ/S,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO6T,EAAUlZ,KAAMoU,EAAQgE,EAAQ/S,GAEzC,QACE,GAAIiR,EAAa,MAAM,IAAIpC,UAAU,qBAAuBG,GAC5DA,GAAY,GAAKA,GAAUoC,cAC3BH,GAAc,IAKtBzW,EAAOkU,UAAUyI,OAAS,WACxB,MAAO,CACL3G,KAAM,SACNhV,KAAMoE,MAAM8O,UAAUU,MAAM+C,KAAKxX,KAAKyc,MAAQzc,KAAM,KA2FxD,IAAIka,EAAuB,KAoB3B,SAASrD,EAAYhD,EAAKX,EAAOC,GAC/B,IAAIuJ,EAAM,GACVvJ,EAAMoG,KAAKC,IAAI3F,EAAIxO,OAAQ8N,GAE3B,IAAK,IAAInB,EAAIkB,EAAOlB,EAAImB,IAAOnB,EAC7B0K,GAAO7E,OAAOsC,aAAsB,IAATtG,EAAI7B,IAEjC,OAAO0K,EAGT,SAAS5F,EAAajD,EAAKX,EAAOC,GAChC,IAAIuJ,EAAM,GACVvJ,EAAMoG,KAAKC,IAAI3F,EAAIxO,OAAQ8N,GAE3B,IAAK,IAAInB,EAAIkB,EAAOlB,EAAImB,IAAOnB,EAC7B0K,GAAO7E,OAAOsC,aAAatG,EAAI7B,IAEjC,OAAO0K,EAGT,SAAS/F,EAAU9C,EAAKX,EAAOC,GAC7B,IAAId,EAAMwB,EAAIxO,SAET6N,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMd,KAAKc,EAAMd,GAGxC,IADA,IAAIsK,EAAM,GACD3K,EAAIkB,EAAOlB,EAAImB,IAAOnB,EAC7B2K,GAAOC,EAAoB/I,EAAI7B,IAEjC,OAAO2K,EAGT,SAAS3F,EAAcnD,EAAKX,EAAOC,GAIjC,IAHA,IAAI0J,EAAQhJ,EAAIY,MAAMvB,EAAOC,GACzBsG,EAAM,GAEDzH,EAAI,EAAGA,EAAI6K,EAAMxX,OAAS,EAAG2M,GAAK,EACzCyH,GAAO5B,OAAOsC,aAAa0C,EAAM7K,GAAqB,IAAf6K,EAAM7K,EAAI,IAEnD,OAAOyH,EAkCT,SAASqD,EAAa1E,EAAQ2E,EAAK1X,GACjC,GAAK+S,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIxE,WAAW,sBAC3D,GAAIwE,EAAS2E,EAAM1X,EAAQ,MAAM,IAAIuO,WAAW,yCAoLlD,SAASoJ,EAAUnJ,EAAK1H,EAAOiM,EAAQ2E,EAAKf,EAAKxC,GAC/C,IAAK3Z,EAAO4V,SAAS5B,GAAM,MAAM,IAAIK,UAAU,+CAC/C,GAAI/H,EAAQ6P,GAAO7P,EAAQqN,EAAK,MAAM,IAAI5F,WAAW,qCACrD,GAAIwE,EAAS2E,EAAMlJ,EAAIxO,OAAQ,MAAM,IAAIuO,WAAW,sBAgMtD,SAASqJ,EAAcpJ,EAAK1H,EAAOiM,EAAQ2E,EAAKf,EAAKxC,GACnD,GAAIpB,EAAS2E,EAAMlJ,EAAIxO,OAAQ,MAAM,IAAIuO,WAAW,sBACpD,GAAIwE,EAAS,EAAG,MAAM,IAAIxE,WAAW,sBAGvC,SAASsJ,EAAYrJ,EAAK1H,EAAOiM,EAAQ+E,EAAcC,GAOrD,OANAjR,GAASA,EACTiM,KAAoB,EACfgF,GACHH,EAAapJ,EAAK1H,EAAOiM,EAAQ,GAEnC7E,EAAQiB,MAAMX,EAAK1H,EAAOiM,EAAQ+E,EAAc,GAAI,GAC7C/E,EAAS,EAWlB,SAASiF,EAAaxJ,EAAK1H,EAAOiM,EAAQ+E,EAAcC,GAOtD,OANAjR,GAASA,EACTiM,KAAoB,EACfgF,GACHH,EAAapJ,EAAK1H,EAAOiM,EAAQ,GAEnC7E,EAAQiB,MAAMX,EAAK1H,EAAOiM,EAAQ+E,EAAc,GAAI,GAC7C/E,EAAS,EAtblBvY,EAAOkU,UAAUU,MAAQ,SAAgBvB,EAAOC,GAC9C,IAAId,EAAMrS,KAAKqF,QACf6N,IAAUA,GAGE,GACVA,GAASb,GACG,IAAGa,EAAQ,GACdA,EAAQb,IACjBa,EAAQb,IANVc,OAAcwC,IAARxC,EAAoBd,IAAQc,GASxB,GACRA,GAAOd,GACG,IAAGc,EAAM,GACVA,EAAMd,IACfc,EAAMd,GAGJc,EAAMD,IAAOC,EAAMD,GAEvB,IAAIoK,EAAStd,KAAKud,SAASrK,EAAOC,GAIlC,OAFAhO,OAAO2O,eAAewJ,EAAQzd,EAAOkU,WAE9BuJ,GAWTzd,EAAOkU,UAAUyJ,WACjB3d,EAAOkU,UAAU0J,WAAa,SAAqBrF,EAAQ5G,EAAY4L,GACrEhF,KAAoB,EACpB5G,KAA4B,EACvB4L,GAAUN,EAAY1E,EAAQ5G,EAAYxR,KAAKqF,QAKpD,IAHA,IAAIgS,EAAMrX,KAAKoY,GACXsF,EAAM,EACN1L,EAAI,IACCA,EAAIR,IAAekM,GAAO,MACjCrG,GAAOrX,KAAKoY,EAASpG,GAAK0L,EAG5B,OAAOrG,GAGTxX,EAAOkU,UAAU4J,WACjB9d,EAAOkU,UAAU6J,WAAa,SAAqBxF,EAAQ5G,EAAY4L,GACrEhF,KAAoB,EACpB5G,KAA4B,EACvB4L,GACHN,EAAY1E,EAAQ5G,EAAYxR,KAAKqF,QAKvC,IAFA,IAAIgS,EAAMrX,KAAKoY,IAAW5G,GACtBkM,EAAM,EACHlM,EAAa,IAAMkM,GAAO,MAC/BrG,GAAOrX,KAAKoY,IAAW5G,GAAckM,EAGvC,OAAOrG,GAGTxX,EAAOkU,UAAU8J,UACjBhe,EAAOkU,UAAU+J,UAAY,SAAoB1F,EAAQgF,GAGvD,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCrF,KAAKoY,IAGdvY,EAAOkU,UAAUgK,aACjBle,EAAOkU,UAAUiK,aAAe,SAAuB5F,EAAQgF,GAG7D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCrF,KAAKoY,GAAWpY,KAAKoY,EAAS,IAAM,GAG7CvY,EAAOkU,UAAUkK,aACjBpe,EAAOkU,UAAUgE,aAAe,SAAuBK,EAAQgF,GAG7D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACnCrF,KAAKoY,IAAW,EAAKpY,KAAKoY,EAAS,IAG7CvY,EAAOkU,UAAUmK,aACjBre,EAAOkU,UAAUoK,aAAe,SAAuB/F,EAAQgF,GAI7D,OAHAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,SAElCrF,KAAKoY,GACTpY,KAAKoY,EAAS,IAAM,EACpBpY,KAAKoY,EAAS,IAAM,IACD,SAAnBpY,KAAKoY,EAAS,IAGrBvY,EAAOkU,UAAUqK,aACjBve,EAAOkU,UAAUsK,aAAe,SAAuBjG,EAAQgF,GAI7D,OAHAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QAEpB,SAAfrF,KAAKoY,IACTpY,KAAKoY,EAAS,IAAM,GACrBpY,KAAKoY,EAAS,IAAM,EACrBpY,KAAKoY,EAAS,KAGlBvY,EAAOkU,UAAUuK,UAAY,SAAoBlG,EAAQ5G,EAAY4L,GACnEhF,KAAoB,EACpB5G,KAA4B,EACvB4L,GAAUN,EAAY1E,EAAQ5G,EAAYxR,KAAKqF,QAKpD,IAHA,IAAIgS,EAAMrX,KAAKoY,GACXsF,EAAM,EACN1L,EAAI,IACCA,EAAIR,IAAekM,GAAO,MACjCrG,GAAOrX,KAAKoY,EAASpG,GAAK0L,EAM5B,OAFIrG,IAFJqG,GAAO,OAESrG,GAAOkC,KAAKgF,IAAI,EAAG,EAAI/M,IAEhC6F,GAGTxX,EAAOkU,UAAUyK,UAAY,SAAoBpG,EAAQ5G,EAAY4L,GACnEhF,KAAoB,EACpB5G,KAA4B,EACvB4L,GAAUN,EAAY1E,EAAQ5G,EAAYxR,KAAKqF,QAKpD,IAHA,IAAI2M,EAAIR,EACJkM,EAAM,EACNrG,EAAMrX,KAAKoY,IAAWpG,GACnBA,EAAI,IAAM0L,GAAO,MACtBrG,GAAOrX,KAAKoY,IAAWpG,GAAK0L,EAM9B,OAFIrG,IAFJqG,GAAO,OAESrG,GAAOkC,KAAKgF,IAAI,EAAG,EAAI/M,IAEhC6F,GAGTxX,EAAOkU,UAAU0K,SAAW,SAAmBrG,EAAQgF,GAGrD,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACtB,IAAfrF,KAAKoY,IAC0B,GAA5B,IAAOpY,KAAKoY,GAAU,GADKpY,KAAKoY,IAI3CvY,EAAOkU,UAAU2K,YAAc,SAAsBtG,EAAQgF,GAC3DhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QAC3C,IAAIgS,EAAMrX,KAAKoY,GAAWpY,KAAKoY,EAAS,IAAM,EAC9C,OAAc,MAANf,EAAsB,WAANA,EAAmBA,GAG7CxX,EAAOkU,UAAU4K,YAAc,SAAsBvG,EAAQgF,GAC3DhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QAC3C,IAAIgS,EAAMrX,KAAKoY,EAAS,GAAMpY,KAAKoY,IAAW,EAC9C,OAAc,MAANf,EAAsB,WAANA,EAAmBA,GAG7CxX,EAAOkU,UAAU6K,YAAc,SAAsBxG,EAAQgF,GAI3D,OAHAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QAEnCrF,KAAKoY,GACVpY,KAAKoY,EAAS,IAAM,EACpBpY,KAAKoY,EAAS,IAAM,GACpBpY,KAAKoY,EAAS,IAAM,IAGzBvY,EAAOkU,UAAU8K,YAAc,SAAsBzG,EAAQgF,GAI3D,OAHAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QAEnCrF,KAAKoY,IAAW,GACrBpY,KAAKoY,EAAS,IAAM,GACpBpY,KAAKoY,EAAS,IAAM,EACpBpY,KAAKoY,EAAS,IAGnBvY,EAAOkU,UAAU+K,YAAc,SAAsB1G,EAAQgF,GAG3D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCkO,EAAQuE,KAAK9X,KAAMoY,GAAQ,EAAM,GAAI,IAG9CvY,EAAOkU,UAAUgL,YAAc,SAAsB3G,EAAQgF,GAG3D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCkO,EAAQuE,KAAK9X,KAAMoY,GAAQ,EAAO,GAAI,IAG/CvY,EAAOkU,UAAUiL,aAAe,SAAuB5G,EAAQgF,GAG7D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCkO,EAAQuE,KAAK9X,KAAMoY,GAAQ,EAAM,GAAI,IAG9CvY,EAAOkU,UAAUkL,aAAe,SAAuB7G,EAAQgF,GAG7D,OAFAhF,KAAoB,EACfgF,GAAUN,EAAY1E,EAAQ,EAAGpY,KAAKqF,QACpCkO,EAAQuE,KAAK9X,KAAMoY,GAAQ,EAAO,GAAI,IAS/CvY,EAAOkU,UAAUmL,YACjBrf,EAAOkU,UAAUoL,YAAc,SAAsBhT,EAAOiM,EAAQ5G,EAAY4L,GAC9EjR,GAASA,EACTiM,KAAoB,EACpB5G,KAA4B,EACvB4L,GAEHJ,EAAShd,KAAMmM,EAAOiM,EAAQ5G,EADf+H,KAAKgF,IAAI,EAAG,EAAI/M,GAAc,EACO,GAGtD,IAAIkM,EAAM,EACN1L,EAAI,EAER,IADAhS,KAAKoY,GAAkB,IAARjM,IACN6F,EAAIR,IAAekM,GAAO,MACjC1d,KAAKoY,EAASpG,GAAM7F,EAAQuR,EAAO,IAGrC,OAAOtF,EAAS5G,GAGlB3R,EAAOkU,UAAUqL,YACjBvf,EAAOkU,UAAUsL,YAAc,SAAsBlT,EAAOiM,EAAQ5G,EAAY4L,GAC9EjR,GAASA,EACTiM,KAAoB,EACpB5G,KAA4B,EACvB4L,GAEHJ,EAAShd,KAAMmM,EAAOiM,EAAQ5G,EADf+H,KAAKgF,IAAI,EAAG,EAAI/M,GAAc,EACO,GAGtD,IAAIQ,EAAIR,EAAa,EACjBkM,EAAM,EAEV,IADA1d,KAAKoY,EAASpG,GAAa,IAAR7F,IACV6F,GAAK,IAAM0L,GAAO,MACzB1d,KAAKoY,EAASpG,GAAM7F,EAAQuR,EAAO,IAGrC,OAAOtF,EAAS5G,GAGlB3R,EAAOkU,UAAUuL,WACjBzf,EAAOkU,UAAUwL,WAAa,SAAqBpT,EAAOiM,EAAQgF,GAKhE,OAJAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,IAAM,GACtDpY,KAAKoY,GAAmB,IAARjM,EACTiM,EAAS,GAGlBvY,EAAOkU,UAAUyL,cACjB3f,EAAOkU,UAAU0L,cAAgB,SAAwBtT,EAAOiM,EAAQgF,GAMtE,OALAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,MAAQ,GACxDpY,KAAKoY,GAAmB,IAARjM,EAChBnM,KAAKoY,EAAS,GAAMjM,IAAU,EACvBiM,EAAS,GAGlBvY,EAAOkU,UAAU2L,cACjB7f,EAAOkU,UAAU4L,cAAgB,SAAwBxT,EAAOiM,EAAQgF,GAMtE,OALAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,MAAQ,GACxDpY,KAAKoY,GAAWjM,IAAU,EAC1BnM,KAAKoY,EAAS,GAAc,IAARjM,EACbiM,EAAS,GAGlBvY,EAAOkU,UAAU6L,cACjB/f,EAAOkU,UAAU8L,cAAgB,SAAwB1T,EAAOiM,EAAQgF,GAQtE,OAPAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,WAAY,GAC5DpY,KAAKoY,EAAS,GAAMjM,IAAU,GAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,GAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,EAC9BnM,KAAKoY,GAAmB,IAARjM,EACTiM,EAAS,GAGlBvY,EAAOkU,UAAU+L,cACjBjgB,EAAOkU,UAAUgM,cAAgB,SAAwB5T,EAAOiM,EAAQgF,GAQtE,OAPAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,WAAY,GAC5DpY,KAAKoY,GAAWjM,IAAU,GAC1BnM,KAAKoY,EAAS,GAAMjM,IAAU,GAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,EAC9BnM,KAAKoY,EAAS,GAAc,IAARjM,EACbiM,EAAS,GAGlBvY,EAAOkU,UAAUiM,WAAa,SAAqB7T,EAAOiM,EAAQ5G,EAAY4L,GAG5E,GAFAjR,GAASA,EACTiM,KAAoB,GACfgF,EAAU,CACb,IAAI6C,EAAQ1G,KAAKgF,IAAI,EAAI,EAAI/M,EAAc,GAE3CwL,EAAShd,KAAMmM,EAAOiM,EAAQ5G,EAAYyO,EAAQ,GAAIA,GAGxD,IAAIjO,EAAI,EACJ0L,EAAM,EACNwC,EAAM,EAEV,IADAlgB,KAAKoY,GAAkB,IAARjM,IACN6F,EAAIR,IAAekM,GAAO,MAC7BvR,EAAQ,GAAa,IAAR+T,GAAsC,IAAzBlgB,KAAKoY,EAASpG,EAAI,KAC9CkO,EAAM,GAERlgB,KAAKoY,EAASpG,IAAO7F,EAAQuR,GAAQ,GAAKwC,EAAM,IAGlD,OAAO9H,EAAS5G,GAGlB3R,EAAOkU,UAAUoM,WAAa,SAAqBhU,EAAOiM,EAAQ5G,EAAY4L,GAG5E,GAFAjR,GAASA,EACTiM,KAAoB,GACfgF,EAAU,CACb,IAAI6C,EAAQ1G,KAAKgF,IAAI,EAAI,EAAI/M,EAAc,GAE3CwL,EAAShd,KAAMmM,EAAOiM,EAAQ5G,EAAYyO,EAAQ,GAAIA,GAGxD,IAAIjO,EAAIR,EAAa,EACjBkM,EAAM,EACNwC,EAAM,EAEV,IADAlgB,KAAKoY,EAASpG,GAAa,IAAR7F,IACV6F,GAAK,IAAM0L,GAAO,MACrBvR,EAAQ,GAAa,IAAR+T,GAAsC,IAAzBlgB,KAAKoY,EAASpG,EAAI,KAC9CkO,EAAM,GAERlgB,KAAKoY,EAASpG,IAAO7F,EAAQuR,GAAQ,GAAKwC,EAAM,IAGlD,OAAO9H,EAAS5G,GAGlB3R,EAAOkU,UAAUqM,UAAY,SAAoBjU,EAAOiM,EAAQgF,GAM9D,OALAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,KAAO,KACnDjM,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCnM,KAAKoY,GAAmB,IAARjM,EACTiM,EAAS,GAGlBvY,EAAOkU,UAAUsM,aAAe,SAAuBlU,EAAOiM,EAAQgF,GAMpE,OALAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,OAAS,OACzDpY,KAAKoY,GAAmB,IAARjM,EAChBnM,KAAKoY,EAAS,GAAMjM,IAAU,EACvBiM,EAAS,GAGlBvY,EAAOkU,UAAUuM,aAAe,SAAuBnU,EAAOiM,EAAQgF,GAMpE,OALAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,OAAS,OACzDpY,KAAKoY,GAAWjM,IAAU,EAC1BnM,KAAKoY,EAAS,GAAc,IAARjM,EACbiM,EAAS,GAGlBvY,EAAOkU,UAAUwM,aAAe,SAAuBpU,EAAOiM,EAAQgF,GAQpE,OAPAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,YAAa,YAC7DpY,KAAKoY,GAAmB,IAARjM,EAChBnM,KAAKoY,EAAS,GAAMjM,IAAU,EAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,GAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,GACvBiM,EAAS,GAGlBvY,EAAOkU,UAAUyM,aAAe,SAAuBrU,EAAOiM,EAAQgF,GASpE,OARAjR,GAASA,EACTiM,KAAoB,EACfgF,GAAUJ,EAAShd,KAAMmM,EAAOiM,EAAQ,EAAG,YAAa,YACzDjM,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CnM,KAAKoY,GAAWjM,IAAU,GAC1BnM,KAAKoY,EAAS,GAAMjM,IAAU,GAC9BnM,KAAKoY,EAAS,GAAMjM,IAAU,EAC9BnM,KAAKoY,EAAS,GAAc,IAARjM,EACbiM,EAAS,GAkBlBvY,EAAOkU,UAAU0M,aAAe,SAAuBtU,EAAOiM,EAAQgF,GACpE,OAAOF,EAAWld,KAAMmM,EAAOiM,GAAQ,EAAMgF,IAG/Cvd,EAAOkU,UAAU2M,aAAe,SAAuBvU,EAAOiM,EAAQgF,GACpE,OAAOF,EAAWld,KAAMmM,EAAOiM,GAAQ,EAAOgF,IAahDvd,EAAOkU,UAAU4M,cAAgB,SAAwBxU,EAAOiM,EAAQgF,GACtE,OAAOC,EAAYrd,KAAMmM,EAAOiM,GAAQ,EAAMgF,IAGhDvd,EAAOkU,UAAU6M,cAAgB,SAAwBzU,EAAOiM,EAAQgF,GACtE,OAAOC,EAAYrd,KAAMmM,EAAOiM,GAAQ,EAAOgF,IAIjDvd,EAAOkU,UAAUgB,KAAO,SAAemH,EAAQ2E,EAAa3N,EAAOC,GACjE,IAAKtT,EAAO4V,SAASyG,GAAS,MAAM,IAAIhI,UAAU,+BAQlD,GAPKhB,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMnT,KAAKqF,QAC9Bwb,GAAe3E,EAAO7W,SAAQwb,EAAc3E,EAAO7W,QAClDwb,IAAaA,EAAc,GAC5B1N,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBgJ,EAAO7W,QAAgC,IAAhBrF,KAAKqF,OAAc,OAAO,EAGrD,GAAIwb,EAAc,EAChB,MAAM,IAAIjN,WAAW,6BAEvB,GAAIV,EAAQ,GAAKA,GAASlT,KAAKqF,OAAQ,MAAM,IAAIuO,WAAW,sBAC5D,GAAIT,EAAM,EAAG,MAAM,IAAIS,WAAW,2BAG9BT,EAAMnT,KAAKqF,SAAQ8N,EAAMnT,KAAKqF,QAC9B6W,EAAO7W,OAASwb,EAAc1N,EAAMD,IACtCC,EAAM+I,EAAO7W,OAASwb,EAAc3N,GAGtC,IAAIb,EAAMc,EAAMD,EAahB,OAXIlT,OAASkc,GAAqD,mBAApC/L,WAAW4D,UAAU+M,WAEjD9gB,KAAK8gB,WAAWD,EAAa3N,EAAOC,GAEpChD,WAAW4D,UAAU0H,IAAIjE,KACvB0E,EACAlc,KAAKud,SAASrK,EAAOC,GACrB0N,GAIGxO,GAOTxS,EAAOkU,UAAUgH,KAAO,SAAe1D,EAAKnE,EAAOC,EAAKkB,GAEtD,GAAmB,iBAARgD,EAAkB,CAS3B,GARqB,iBAAVnE,GACTmB,EAAWnB,EACXA,EAAQ,EACRC,EAAMnT,KAAKqF,QACa,iBAAR8N,IAChBkB,EAAWlB,EACXA,EAAMnT,KAAKqF,aAEIsQ,IAAbtB,GAA8C,iBAAbA,EACnC,MAAM,IAAIH,UAAU,6BAEtB,GAAwB,iBAAbG,IAA0BxU,EAAOyU,WAAWD,GACrD,MAAM,IAAIH,UAAU,qBAAuBG,GAE7C,GAAmB,IAAfgD,EAAIhS,OAAc,CACpB,IAAI2N,EAAOqE,EAAI9E,WAAW,IACR,SAAb8B,GAAuBrB,EAAO,KAClB,WAAbqB,KAEFgD,EAAMrE,QAGc,iBAARqE,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMgB,OAAOhB,IAIf,GAAInE,EAAQ,GAAKlT,KAAKqF,OAAS6N,GAASlT,KAAKqF,OAAS8N,EACpD,MAAM,IAAIS,WAAW,sBAGvB,GAAIT,GAAOD,EACT,OAAOlT,KAQT,IAAIgS,EACJ,GANAkB,KAAkB,EAClBC,OAAcwC,IAARxC,EAAoBnT,KAAKqF,OAAS8N,IAAQ,EAE3CkE,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKrF,EAAIkB,EAAOlB,EAAImB,IAAOnB,EACzBhS,KAAKgS,GAAKqF,MAEP,CACL,IAAIwF,EAAQhd,EAAO4V,SAAS4B,GACxBA,EACAxX,EAAO+B,KAAKyV,EAAKhD,GACjBhC,EAAMwK,EAAMxX,OAChB,GAAY,IAARgN,EACF,MAAM,IAAI6B,UAAU,cAAgBmD,EAClC,qCAEJ,IAAKrF,EAAI,EAAGA,EAAImB,EAAMD,IAASlB,EAC7BhS,KAAKgS,EAAIkB,GAAS2J,EAAM7K,EAAIK,GAIhC,OAAOrS,MAMT,IAAI+gB,EAAoB,oBAgBxB,SAASxK,EAAanC,EAAQ+E,GAE5B,IAAIY,EADJZ,EAAQA,GAAS6H,IAMjB,IAJA,IAAI3b,EAAS+O,EAAO/O,OAChB4b,EAAgB,KAChBpE,EAAQ,GAEH7K,EAAI,EAAGA,EAAI3M,IAAU2M,EAAG,CAI/B,IAHA+H,EAAY3F,EAAO7B,WAAWP,IAGd,OAAU+H,EAAY,MAAQ,CAE5C,IAAKkH,EAAe,CAElB,GAAIlH,EAAY,MAAQ,EAEjBZ,GAAS,IAAM,GAAG0D,EAAM1b,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI6Q,EAAI,IAAM3M,EAAQ,EAEtB8T,GAAS,IAAM,GAAG0D,EAAM1b,KAAK,IAAM,IAAM,KAC9C,SAIF8f,EAAgBlH,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBZ,GAAS,IAAM,GAAG0D,EAAM1b,KAAK,IAAM,IAAM,KAC9C8f,EAAgBlH,EAChB,SAIFA,EAAkE,OAArDkH,EAAgB,OAAU,GAAKlH,EAAY,YAC/CkH,IAEJ9H,GAAS,IAAM,GAAG0D,EAAM1b,KAAK,IAAM,IAAM,KAMhD,GAHA8f,EAAgB,KAGZlH,EAAY,IAAM,CACpB,IAAKZ,GAAS,GAAK,EAAG,MACtB0D,EAAM1b,KAAK4Y,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKZ,GAAS,GAAK,EAAG,MACtB0D,EAAM1b,KACJ4Y,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKZ,GAAS,GAAK,EAAG,MACtB0D,EAAM1b,KACJ4Y,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAIlO,MAAM,sBARhB,IAAKsN,GAAS,GAAK,EAAG,MACtB0D,EAAM1b,KACJ4Y,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAO8C,EA4BT,SAASrG,EAAesC,GACtB,OAAOxF,EAAOxB,YAxHhB,SAAsBgH,GAMpB,IAFAA,GAFAA,EAAMA,EAAIpM,MAAM,KAAK,IAEXuP,OAAOhM,QAAQ8Q,EAAmB,KAEpC1b,OAAS,EAAG,MAAO,GAE3B,KAAOyT,EAAIzT,OAAS,GAAM,GACxByT,GAAY,IAEd,OAAOA,EA6GmBoI,CAAYpI,IAGxC,SAASF,EAAYuI,EAAKC,EAAKhJ,EAAQ/S,GACrC,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,KACb2M,EAAIoG,GAAUgJ,EAAI/b,QAAY2M,GAAKmP,EAAI9b,UADhB2M,EAE5BoP,EAAIpP,EAAIoG,GAAU+I,EAAInP,GAExB,OAAOA,EAMT,SAAS8C,EAAYU,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAIlQ,aAA+C,MAAxBkQ,EAAIlQ,YAAYlD,MACzDoT,EAAIlQ,YAAYlD,OAASyT,EAAKzT,KAEpC,SAASwT,EAAaJ,GAEpB,OAAOA,GAAQA,EAKjB,IAAIoH,EAAsB,WAGxB,IAFA,IAAIyE,EAAW,mBACXC,EAAQ,IAAIrc,MAAM,KACb+M,EAAI,EAAGA,EAAI,KAAMA,EAExB,IADA,IAAIuP,EAAU,GAAJvP,EACDkG,EAAI,EAAGA,EAAI,KAAMA,EACxBoJ,EAAMC,EAAMrJ,GAAKmJ,EAASrP,GAAKqP,EAASnJ,GAG5C,OAAOoJ,EATiB,I,QC9wD1B,IAAIE,EAAgB,WACnB,GAAoB,iBAAT7hB,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,iBAAX8hB,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI5V,MAAM,oCAGjBrM,EAAOD,QAAU,WAChB,GAAIS,KAAM,OAAOA,KAKjB,GAA0B,iBAAf0hB,YAA2BA,WAAY,OAAOA,WAKzD,IACCvc,OAAO6G,eAAe7G,OAAO4O,UAAW,aAAc,CACrD6G,IAAK,WAAc,OAAO5a,MAC1BiM,cAAc,IAEd,MAAO1J,GAGR,OAAOif,IAER,IAEC,OAAKG,YAAmBH,IAEvB,eACMrc,OAAO4O,UAAU4N,YA1BT,I,cCNjB,IAAIF,EAAS,EAAQ,KACjBG,EAAa,EAAQ,KA+BzBpiB,EAAOD,QA7BP,SAAyBsU,GACvB,GAAI4N,EAAOI,QAAUJ,EAAOI,OAAOlW,gBACjC,OAAO8V,EAAOI,OAAOlW,gBAAgBkI,GAEvC,GAA+B,iBAApB4N,EAAOK,UAAoE,mBAApCL,EAAOK,SAASnW,gBAChE,OAAO8V,EAAOK,SAASnW,gBAAgBkI,GAEzC,GAAI+N,EAAWG,YAAa,CAC1B,KAAMlO,aAAe1D,YACnB,MAAM,IAAI+D,UAAU,uBAEtB,GAAIL,EAAIxO,OAAS,MAAO,CACtB,IAAIoV,EAAI,IAAI5O,MAMZ,MALA4O,EAAEzH,KAAO,GACTyH,EAAE3O,QAAU,uFAC2B+H,EAAIxO,OAD/B,2EAGZoV,EAAErY,KAAO,qBACHqY,EAER,IAAIoC,EAAQ+E,EAAWG,YAAYlO,EAAIxO,QAEvC,OADAwO,EAAI4H,IAAIoB,GACDhJ,EAGP,MAAM,IAAIhI,MAAM,kD,cC5BpB,IAAImW,EAGAA,EADkB,oBAAXP,OACDA,YACmB,IAAX,EAAAQ,EACR,EAAAA,EACiB,oBAATtiB,KACRA,KAEA,GAGVH,EAAOD,QAAUyiB,G,YCXjBziB,EAAQuY,KAAO,SAAU7C,EAAQmD,EAAQ8J,EAAMC,EAAMC,GACnD,IAAI3H,EAAGtD,EACHkL,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTxQ,EAAIkQ,EAAQE,EAAS,EAAK,EAC1BK,EAAIP,GAAQ,EAAI,EAChBQ,EAAIzN,EAAOmD,EAASpG,GAOxB,IALAA,GAAKyQ,EAELhI,EAAIiI,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAG/H,EAAS,IAAJA,EAAWxF,EAAOmD,EAASpG,GAAIA,GAAKyQ,EAAGD,GAAS,GAKvE,IAHArL,EAAIsD,GAAM,IAAO+H,GAAU,EAC3B/H,KAAQ+H,EACRA,GAASL,EACFK,EAAQ,EAAGrL,EAAS,IAAJA,EAAWlC,EAAOmD,EAASpG,GAAIA,GAAKyQ,EAAGD,GAAS,GAEvE,GAAU,IAAN/H,EACFA,EAAI,EAAI8H,MACH,IAAI9H,IAAM6H,EACf,OAAOnL,EAAIwL,IAAsB3B,KAAd0B,GAAK,EAAI,GAE5BvL,GAAQoC,KAAKgF,IAAI,EAAG4D,GACpB1H,GAAQ8H,EAEV,OAAQG,GAAK,EAAI,GAAKvL,EAAIoC,KAAKgF,IAAI,EAAG9D,EAAI0H,IAG5C5iB,EAAQiV,MAAQ,SAAUS,EAAQ9I,EAAOiM,EAAQ8J,EAAMC,EAAMC,GAC3D,IAAI3H,EAAGtD,EAAGjH,EACNmS,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBM,EAAe,KAATT,EAAc5I,KAAKgF,IAAI,GAAI,IAAMhF,KAAKgF,IAAI,GAAI,IAAM,EAC1DvM,EAAIkQ,EAAO,EAAKE,EAAS,EACzBK,EAAIP,EAAO,GAAK,EAChBQ,EAAIvW,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQoN,KAAKsJ,IAAI1W,GAEb2W,MAAM3W,IAAUA,IAAU6U,KAC5B7J,EAAI2L,MAAM3W,GAAS,EAAI,EACvBsO,EAAI6H,IAEJ7H,EAAIlB,KAAKwJ,MAAMxJ,KAAKzO,IAAIqB,GAASoN,KAAKyJ,KAClC7W,GAAS+D,EAAIqJ,KAAKgF,IAAI,GAAI9D,IAAM,IAClCA,IACAvK,GAAK,IAGL/D,GADEsO,EAAI8H,GAAS,EACNK,EAAK1S,EAEL0S,EAAKrJ,KAAKgF,IAAI,EAAG,EAAIgE,IAEpBrS,GAAK,IACfuK,IACAvK,GAAK,GAGHuK,EAAI8H,GAASD,GACfnL,EAAI,EACJsD,EAAI6H,GACK7H,EAAI8H,GAAS,GACtBpL,GAAMhL,EAAQ+D,EAAK,GAAKqJ,KAAKgF,IAAI,EAAG4D,GACpC1H,GAAQ8H,IAERpL,EAAIhL,EAAQoN,KAAKgF,IAAI,EAAGgE,EAAQ,GAAKhJ,KAAKgF,IAAI,EAAG4D,GACjD1H,EAAI,IAID0H,GAAQ,EAAGlN,EAAOmD,EAASpG,GAAS,IAAJmF,EAAUnF,GAAKyQ,EAAGtL,GAAK,IAAKgL,GAAQ,GAI3E,IAFA1H,EAAKA,GAAK0H,EAAQhL,EAClBkL,GAAQF,EACDE,EAAO,EAAGpN,EAAOmD,EAASpG,GAAS,IAAJyI,EAAUzI,GAAKyQ,EAAGhI,GAAK,IAAK4H,GAAQ,GAE1EpN,EAAOmD,EAASpG,EAAIyQ,IAAU,IAAJC,I,yBChF5B,IAUIO,EAVY,WAIf,GAAoB,oBAATtjB,KAAwB,OAAOA,KAC1C,GAAsB,oBAAX8hB,OAA0B,OAAOA,OAC5C,QAAsB,IAAXwB,EAA0B,OAAOA,EAC5C,MAAM,IAAIpX,MAAM,kCAGJqX,GAEb1jB,EAAOD,QAAUA,EAAU0jB,EAAOvX,MAG9BuX,EAAOvX,QACVnM,EAAQ4jB,QAAUF,EAAOvX,MAAM0X,KAAKH,IAGrC1jB,EAAQ8jB,QAAUJ,EAAOI,QACzB9jB,EAAQ+jB,QAAUL,EAAOK,QACzB/jB,EAAQgkB,SAAWN,EAAOM,U,qBCtB1B,MAAMC,EAAa,CAClB,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGKC,EAAe,CACpB,IACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGKC,EAAY,CACjB,IACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAGKC,EAAc,CACnB,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SASK9H,EAAiB,CAAC+H,EAAQC,EAAQC,KACvC,IAAIC,EAASH,EAOb,MANsB,iBAAXC,GAAuB5e,MAAM6Q,QAAQ+N,GAC/CE,EAASH,EAAO/H,eAAegI,EAAQC,IAClB,IAAXD,QAA+BlO,IAAZmO,IAC7BC,EAASH,EAAO/H,oBAAelG,EAAWmO,IAGpCC,GAGRvkB,EAAOD,QAAU,CAACqkB,EAAQE,KACzB,IAAKzL,OAAOkE,SAASqH,GACpB,MAAM,IAAI1P,UAAU,wCAAwC0P,MAAWA,KAKxE,MAAMI,GAFNF,EAAU3e,OAAO8e,OAAO,CAACC,MAAM,EAAOC,QAAQ,GAAQL,IAEhCI,KACpBJ,EAAQK,OAASR,EAAcD,EAC/BI,EAAQK,OAASV,EAAeD,EAElC,GAAIM,EAAQM,QAAqB,IAAXR,EACrB,MAAO,MAAMI,EAAM,KAGpB,MAAMK,EAAaT,EAAS,EACtBU,EAASD,EAAa,IAAOP,EAAQM,OAAS,IAAM,GAM1D,IAAIG,EAUJ,GAdIF,IACHT,GAAUA,QAK2BjO,IAAlCmO,EAAQU,wBACXD,EAAgB,CAACC,sBAAuBV,EAAQU,6BAGX7O,IAAlCmO,EAAQW,wBACXF,EAAgBpf,OAAO8e,OAAO,CAACQ,sBAAuBX,EAAQW,uBAAwBF,IAGnFX,EAAS,EAEZ,OAAOU,EADczI,EAAe+H,EAAQE,EAAQD,OAAQU,GAC7B,IAAMP,EAAM,GAG5C,MAAMU,EAAWnL,KAAKC,IAAID,KAAKwJ,MAAMe,EAAQK,OAAS5K,KAAKzO,IAAI8Y,GAAUrK,KAAKzO,IAAI,MAAQyO,KAAKoL,MAAMf,GAAU,GAAII,EAAM3e,OAAS,GAYlI,OAVAue,GAAUrK,KAAKgF,IAAIuF,EAAQK,OAAS,KAAO,IAAMO,GAE5CH,IACJX,EAASA,EAAOgB,YAAY,IAOtBN,EAJczI,EAAexD,OAAOuL,GAASE,EAAQD,OAAQU,GAIrC,IAFlBP,EAAMU,K,cClHpB,IAAIG,EACJ,IACCA,EAAc,EAAQ,KACrB,MAAOtiB,IACP,QAED,GADKsiB,GAAiC,oBAAXpD,SAA0BoD,EAAcpD,SAC9DoD,EAAe,MAAM,IAAIhZ,MAAM,mCAGrC,IAAIiZ,EAAkBD,EAAYpZ,WAAaoZ,EAAYE,aACvDC,EAAoB,EAAQ,KAMhC,SAASC,EAAaC,EAAKC,GAiB1B,OAdIA,EACe,IAAIL,EAAgBI,EAAKC,GAGzB,IAAIL,EAAgBI,GAYpCJ,GACH,CAAC,aAAc,OAAQ,UAAW,UAAUjY,SAAQ,SAASuY,GAC5DjgB,OAAO6G,eAAeiZ,EAAcG,EAAM,CACzCxK,IAAK,WAAa,OAAOkK,EAAgBM,SAQ5C5lB,EAAOD,QAAU,CACb,aAAiBulB,EAAkBG,EAAe,KAClD,QAAiBD,I,cChDrBxlB,EAAOD,QAAU,EAAjB,c,iECGA,MAAM8lB,EAAK,EAAQ,KACbxlB,EAAS,UAgjBfL,EAAOD,QAAU,CAAEiM,WA9iBA,CAAC8Z,EAAkBC,KACpC,GAAgC,iBAArBD,IAAoE,IAAnCjN,OAAOyK,MAAMwC,GACvD,MAAMzZ,MAAM,8DAEd,GAAIyZ,EAAmB,EACrB,MAAMzZ,MAAM,uEAEd,QAAoB8J,IAAhB4P,EAA2B,CAC7B,GAA2B,mBAAhBA,EACT,MAAM1Z,MAAM,2DAEd0Z,EAAY,yCAAyCF,EAAGC,MAE1D,MAAME,EAAa,GACnB,IAAIC,GAAoB,EACpBC,GAAoB,GAOxB,MAQMC,EAAmB9lB,EAAOsU,YAAYmR,GAAkBvK,KAAK,GACnE,IAAI6K,GAA0B,EAC9B,MAAMC,EAAkB1Z,IACtB,IAAI9G,EAAS,EACb,cAAe8G,GACb,IAAK,SAEH,GADA9G,EAASxF,EAAO2R,WAAWrF,GACvB9G,EAAS,GAAI,CACfA,EAAS,EACT,IAAK,IAAI2M,EAAI,EAAG9B,EAAI,EAAG4V,EAAI3Z,EAAM9G,OAAQ2M,EAAI8T,EAAG9T,GAAK,EACnD9B,EAAI/D,EAAMoG,WAAWP,GACjB9B,EAAI,IACN7K,GAAU,EACD6K,EAAI,KACb7K,GAAU,EACD6K,EAAI,OAASA,GAAK,MAC3B7K,GAAU,GAEV2M,GAAK,EACL3M,GAAU,GAGdsgB,EAAiBC,GAA0B,GAAc,IAATvgB,EAChD,IAAK,IAAI2M,EAAI,EAAG9B,EAAI,EAAG4V,EAAI3Z,EAAM9G,OAAQ2M,EAAI8T,EAAG9T,GAAK,EACnD9B,EAAI/D,EAAMoG,WAAWP,GACjB9B,EAAI,IACNyV,EAAiBC,GAA0B,GAAK1V,EACvCA,EAAI,MACbyV,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,EAC5DyV,EAAiBC,GAA0B,GAAK,IAAW,GAAJ1V,GAC9CA,EAAI,OAASA,GAAK,OAC3ByV,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,GAC5DyV,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,EAAK,GACjEyV,EAAiBC,GAA0B,GAAK,IAAW,GAAJ1V,IAEvD8B,GAAK,EACL9B,EAAI,QAAe,KAAJA,IAAa,GAA6B,KAAtB/D,EAAMoG,WAAWP,IACpD2T,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,GAC5DyV,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,GAAM,GAClEyV,EAAiBC,GAA0B,GAAK,IAAO1V,GAAK,EAAK,GACjEyV,EAAiBC,GAA0B,GAAK,IAAW,GAAJ1V,QAGtD,GAAI7K,EAAS,IAClBsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,EAChDsgB,EAAiBnR,MAAMrI,EAAOyZ,GAA0B,EAAGvgB,EAAQ,QACnEugB,GAA0BvgB,EAAS,OAC9B,GAAIA,EAAS,MAClBsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAChDsgB,EAAiBnR,MAAMrI,EAAOyZ,GAA0B,EAAGvgB,EAAQ,QACnEugB,GAA0BvgB,EAAS,MAC9B,MAAIA,EAAS,YASlB,MAAMwG,MAAM,0FARZ8Z,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAChDsgB,EAAiBnR,MAAMrI,EAAOyZ,GAA0B,EAAGvgB,EAAQ,QACnEugB,GAA0BvgB,EAAS,EAIrC,MACF,IAAK,SACH,IAA+B,IAA3BgT,OAAOkE,SAASpQ,GAAkB,CACpC,IAA4B,IAAxBkM,OAAOyK,MAAM3W,GAAiB,CAChCwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAK,EAChDD,EAAiBC,GAA0B,GAAK,EAChD,MAEF,GAAIzZ,IAAU6U,IAAU,CACtB2E,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAK,EAChDD,EAAiBC,GAA0B,GAAK,EAChD,MAEF,GAAIzZ,KAAU,IAAW,CACvBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAK,EAChDD,EAAiBC,GAA0B,GAAK,EAChD,OAGJ,GAAIrM,KAAKwJ,MAAM5W,KAAWA,EAAO,CAC/B,GAAIoN,KAAKwM,OAAO5Z,KAAWA,EAAO,CAChCwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBjF,aAAavU,EAAOyZ,GAA0B,GAC/DA,GAA0B,EAC1B,MAEAD,EAAiBC,GAA0B,GAAK,IAChDD,EAAiB/E,cAAczU,EAAOyZ,GAA0B,GAChEA,GAA0B,EAC1B,MAGJ,GAAIzZ,GAAS,EAAG,CACd,GAAIA,EAAQ,IAAK,CACfwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,EAAQ,IAAK,CACfwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,EAAQ,MAAO,CACjBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,GAAS,EACzDwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,EAAQ,WAAY,CACtBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,GAAS,GACzDwZ,EAAiBC,GAA0B,GAAKzZ,GAAS,GACzDwZ,EAAiBC,GAA0B,GAAKzZ,GAAS,EACzDwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAGF,IAAIiN,EAAMjN,EAAQoN,KAAKgF,IAAI,EAAG,KAAQ,EAAGlF,EAAKlN,IAAU,EACxDwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKxM,GAAM,GACtDuM,EAAiBC,GAA0B,GAAKxM,GAAM,GACtDuM,EAAiBC,GAA0B,GAAKxM,GAAM,EACtDuM,EAAiBC,GAA0B,GAAKxM,EAChDuM,EAAiBC,GAA0B,GAAKvM,GAAM,GACtDsM,EAAiBC,GAA0B,GAAKvM,GAAM,GACtDsM,EAAiBC,GAA0B,GAAKvM,GAAM,EACtDsM,EAAiBC,GAA0B,GAAKvM,MAC3C,CACL,GAAIlN,IAAU,GAAI,CAChBwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,IAAU,IAAK,CACjBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,IAAU,MAAO,CACnBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,GAAS,EACzDwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAEF,GAAIA,IAAU,MAAW,CACvBwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKzZ,GAAS,GACzDwZ,EAAiBC,GAA0B,GAAKzZ,GAAS,GACzDwZ,EAAiBC,GAA0B,GAAKzZ,GAAS,EACzDwZ,EAAiBC,GAA0B,GAAKzZ,EAChD,MAGF,IAAIiN,EAAKG,KAAKwJ,MAAM5W,EAAQoN,KAAKgF,IAAI,EAAG,KAAMlF,EAAKlN,IAAU,EAC7DwZ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKxM,GAAM,GACtDuM,EAAiBC,GAA0B,GAAKxM,GAAM,GACtDuM,EAAiBC,GAA0B,GAAKxM,GAAM,EACtDuM,EAAiBC,GAA0B,GAAKxM,EAChDuM,EAAiBC,GAA0B,GAAKvM,GAAM,GACtDsM,EAAiBC,GAA0B,GAAKvM,GAAM,GACtDsM,EAAiBC,GAA0B,GAAKvM,GAAM,EACtDsM,EAAiBC,GAA0B,GAAKvM,EAElD,MACF,IAAK,SACH,GAAc,OAAVlN,EAAgB,CAClBwZ,EAAiBC,GAA0B,GAAK,IAChD,MAEF,IAA6B,IAAzB3gB,MAAM6Q,QAAQ3J,GAAiB,CAEjC,GADA9G,EAAS8G,EAAM9G,OACXA,EAAS,GACXsgB,EAAiBC,GAA0B,GAAc,IAATvgB,OAC3C,GAAIA,EAAS,MAClBsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,MAC3C,MAAIA,EAAS,YAOlB,MAAM,IAAIwG,MAAM,qCANhB8Z,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAIlD,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B6T,EAAe1Z,EAAM6F,IAEvB,MAKF,GAHI7F,aAAiBwI,cACnBxI,EAAQtM,EAAO+B,KAAKuK,IAGpBA,aAAiBtM,GAAW,IAE1BsM,aAAiB6Z,WACd7Z,aAAiB8Z,YACjB9Z,aAAiB+Z,YACjB/Z,aAAiBgE,YACjBhE,aAAiBga,mBACjBha,aAAiBia,aACjBja,aAAiBka,aACjBla,aAAiBma,cACjBna,aAAiBoa,cAEtB,CACA,IAAIC,EAAO3mB,EAAO+B,KAAKuK,EAAM8I,QACzB9I,EAAMqF,aAAerF,EAAM8I,OAAOzD,aACpCgV,EAAOA,EAAK/R,MAAMtI,EAAM+I,WAAY/I,EAAM+I,WAAa/I,EAAMqF,aAE/DrF,EAAQqa,EAEV,GAAIra,aAAiBtM,EAAQ,CAE3B,GADAwF,EAAS8G,EAAM9G,OACXA,EAAS,IAGX,GAFAsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,EAC5CA,EAAS,GACX8G,EAAM4I,KAAK4Q,EAAkBC,GAA0B,EAAG,EAAGvgB,GAC7DugB,GAA0BvgB,EAAS,OAEnC,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,EAAQ2M,IAC1B2T,EAAiBC,GAA0B,GAAKzZ,EAAM6F,QAGrD,GAAI3M,EAAS,MAClBsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAChD8G,EAAM4I,KAAK4Q,EAAkBC,GAA0B,EAAG,EAAGvgB,GAC7DugB,GAA0BvgB,EAAS,MAC9B,MAAIA,EAAS,YASlB,MAAMwG,MAAM,0FARZ8Z,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAChD8G,EAAM4I,KAAK4Q,EAAkBC,GAA0B,EAAG,EAAGvgB,GAC7DugB,GAA0BvgB,EAAS,EAIrC,MACK,CACL,IAAID,EAAOD,OAAOC,KAAK+G,GAEvB,GADA9G,EAASD,EAAKC,OACVA,EAAS,GACXsgB,EAAiBC,GAA0B,GAAc,IAATvgB,OAC3C,GAAIA,EAAS,MAClBsgB,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,MAC3C,MAAIA,EAAS,YAOlB,MAAM,IAAIwG,MAAM,sCANhB8Z,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,GAC1DsgB,EAAiBC,GAA0B,GAAKvgB,GAAU,EAC1DsgB,EAAiBC,GAA0B,GAAKvgB,EAIlD,IAA0B,IAAtBogB,EACF,IAAK,IAAIzT,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B6T,EAAeL,EAAWpgB,EAAK4M,KAAO5M,EAAK4M,IAC3C6T,EAAe1Z,EAAM/G,EAAK4M,UAG5B,IAAK,IAAIA,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B6T,EAAezgB,EAAK4M,IACpB6T,EAAe1Z,EAAM/G,EAAK4M,KAIhC,MACF,QACE,OAAQ7F,GACN,KAAK,EACHwZ,EAAiBC,GAA0B,GAAM,IACjD,MACF,KAAK,EACHD,EAAiBC,GAA0B,GAAM,IACjD,MACF,UAAKjQ,EACHgQ,EAAiBC,GAA0B,GAAK,IAChDD,EAAiBC,GAA0B,GAAK,EAChDD,EAAiBC,GAA0B,GAAK,EAChD,MACF,QACE,MAAM/Z,MAAM,8CAWtB,IAAI4a,EACAC,EAAyB,EAC7B,MAAMC,EAAiB,KACrB,IAAIxa,EAAO9G,EACX,GAAIohB,EAAiBC,GAA0B,IAAK,CAClD,GAAID,EAAiBC,GAA0B,IAG7C,OAFAva,EAAQsa,EAAiBC,GACzBA,GAA0B,EACnBva,EACF,GAAIsa,EAAiBC,GAA0B,IAAK,CAIzD,GAHArhB,EAAoD,GAA3CohB,EAAiBC,GAC1Bva,EAAQ,GACRua,GAA0B,GACA,IAAtBjB,EACF,IAAK,IAAWta,EAAP6G,EAAI,EAAQA,EAAI3M,EAAQ2M,IAC/B7G,EAAMwb,IACNxa,EAAMqZ,EAAWra,IAAQA,GAAOwb,SAGlC,IAAK,IAAI3U,EAAI,EAAGA,EAAI3M,EAAQ2M,IAC1B7F,EAAMwa,KAAoBA,IAG9B,OAAOxa,EACF,GAAIsa,EAAiBC,GAA0B,IAAK,CACzDrhB,EAAoD,GAA3CohB,EAAiBC,GAC1BA,GAA0B,EAC1Bva,EAAQ,IAAIlH,MAAMI,GAClB,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B7F,EAAM6F,GAAK2U,IAEb,OAAOxa,EAMP,OAJA9G,EAAoD,GAA3CohB,EAAiBC,GAC1BA,GAA0B,EAC1Bva,EAAQsa,EAAiBrW,SAAS,OAAQsW,EAAwBA,EAAyBrhB,GAC3FqhB,GAA0BrhB,EACnB8G,EAEJ,GAAIsa,EAAiBC,GAA0B,IAGpD,OAFAva,GAAgE,GAAvD,IAAMsa,EAAiBC,GAA0B,GAC1DA,GAA0B,EACnBva,EAEP,OAAQsa,EAAiBC,IACvB,KAAK,IAGH,OAFAva,EAAQsa,EAAiB1H,YAAY2H,GAA0B,GAC/DA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiBxH,aAAayH,GAA0B,GAChEA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiB3I,UAAU4I,GAA0B,GAC7DA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiB1O,aAAa2O,GAA0B,GAChEA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiBpI,aAAaqI,GAA0B,GAChEA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAUsa,EAAiBpI,aAAaqI,GAA0B,GAAKnN,KAAKgF,IAAI,EAAG,IAAQkI,EAAiBpI,aAAaqI,GAA0B,GACnJA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiBhI,SAASiI,GAA0B,GAC5DA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiB9H,YAAY+H,GAA0B,GAC/DA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAQsa,EAAiB5H,YAAY6H,GAA0B,GAC/DA,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,EAAUsa,EAAiB5H,YAAY6H,GAA0B,GAAKnN,KAAKgF,IAAI,EAAG,IAAQkI,EAAiBpI,aAAaqI,GAA0B,GAClJA,GAA0B,EACnBva,EAET,KAAK,IAKH,OAJA9G,EAASohB,EAAiB3I,UAAU4I,GAA0B,GAC9DA,GAA0B,EAC1Bva,EAAQsa,EAAiBrW,SAAS,OAAQsW,EAAwBA,EAAyBrhB,GAC3FqhB,GAA0BrhB,EACnB8G,EACT,KAAK,IAKH,OAJA9G,EAASohB,EAAiB1O,aAAa2O,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQsa,EAAiBrW,SAAS,OAAQsW,EAAwBA,EAAyBrhB,GAC3FqhB,GAA0BrhB,EACnB8G,EACT,KAAK,IAKH,OAJA9G,EAASohB,EAAiBpI,aAAaqI,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQsa,EAAiBrW,SAAS,OAAQsW,EAAwBA,EAAyBrhB,GAC3FqhB,GAA0BrhB,EACnB8G,EAET,KAAK,IACH,OAASsa,EAAiBhI,SAASiI,GAA0B,IAC3D,KAAK,EACH,OAASD,EAAiBhI,SAASiI,GAA0B,IAC3D,KAAK,EAGH,OAFAva,OAAQwJ,EACR+Q,GAA0B,EACnBva,EACT,KAAK,EAGH,OAFAA,EAAQwW,IACR+D,GAA0B,EACnBva,EACT,KAAK,EAGH,OAFAA,EAAQ6U,IACR0F,GAA0B,EACnBva,EACT,KAAK,EAGH,OAFAA,GAAQ,IACRua,GAA0B,EACnBva,GAIf,MACF,KAAK,IAGH,OAFAA,EAAQ,KACRua,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,GAAQ,EACRua,GAA0B,EACnBva,EACT,KAAK,IAGH,OAFAA,GAAQ,EACRua,GAA0B,EACnBva,EACT,KAAK,IACH9G,EAASohB,EAAiB1O,aAAa2O,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQ,IAAIlH,MAAMI,GAClB,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B7F,EAAM6F,GAAK2U,IAEb,OAAOxa,EACT,KAAK,IACH9G,EAASohB,EAAiBpI,aAAaqI,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQ,IAAIlH,MAAMI,GAClB,IAAK,IAAI2M,EAAI,EAAGA,EAAI3M,EAAQ2M,GAAK,EAC/B7F,EAAM6F,GAAK2U,IAEb,OAAOxa,EACT,KAAK,IAIH,GAHA9G,EAASohB,EAAiB1O,aAAa2O,GAA0B,GACjEva,EAAQ,GACRua,GAA0B,GACA,IAAtBjB,EACF,IAAK,IAAWta,EAAP6G,EAAI,EAAQA,EAAI3M,EAAQ2M,IAC/B7G,EAAMwb,IACNxa,EAAMqZ,EAAWra,IAAQA,GAAOwb,SAGlC,IAAK,IAAI3U,EAAI,EAAGA,EAAI3M,EAAQ2M,IAC1B7F,EAAMwa,KAAoBA,IAG9B,OAAOxa,EACT,KAAK,IAIH,GAHA9G,EAASohB,EAAiBpI,aAAaqI,GAA0B,GACjEva,EAAQ,GACRua,GAA0B,GACA,IAAtBjB,EACF,IAAK,IAAWta,EAAP6G,EAAI,EAAQA,EAAI3M,EAAQ2M,IAC/B7G,EAAMwb,IACNxa,EAAMqZ,EAAWra,IAAQA,GAAOwb,SAGlC,IAAK,IAAI3U,EAAI,EAAGA,EAAI3M,EAAQ2M,IAC1B7F,EAAMwa,KAAoBA,IAG9B,OAAOxa,EACT,KAAK,IAKH,OAJA9G,EAASohB,EAAiB3I,UAAU4I,GAA0B,GAC9DA,GAA0B,EAC1Bva,EAAQsa,EAAiBhS,MAAMiS,EAAwBA,EAAyBrhB,GAChFqhB,GAA0BrhB,EACnB8G,EACT,KAAK,IAKH,OAJA9G,EAASohB,EAAiB1O,aAAa2O,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQsa,EAAiBhS,MAAMiS,EAAwBA,EAAyBrhB,GAChFqhB,GAA0BrhB,EACnB8G,EACT,KAAK,IAKH,OAJA9G,EAASohB,EAAiBpI,aAAaqI,GAA0B,GACjEA,GAA0B,EAC1Bva,EAAQsa,EAAiBhS,MAAMiS,EAAwBA,EAAyBrhB,GAChFqhB,GAA0BrhB,EACnB8G,EAEX,MAAMN,MAAM,4CAUhB,MAAO,CAAEN,OA/NOY,IACdyZ,GAA0B,EAC1BC,EAAe1Z,GACf,MAAMya,EAAU/mB,EAAOsU,YAAYyR,EAAyB,GAAG7K,KAAK,GAEpE,OADA4K,EAAiB5Q,KAAK6R,EAAS,EAAG,EAAGhB,EAAyB,GACvDgB,GA0NQjlB,OAPDsT,IACdwR,EAAmBxR,EACnByR,EAAyB,EACzB,MAAM3C,EAAS4C,IAEf,OADAF,OAAmB9Q,EACZoO,GAEgB8C,SArhBR,IAAI9a,MACO,IAAtB0Z,IAA6BA,GAAoB,GACrD,IAAK,IAAIzT,EAAI,EAAG8T,EAAI/Z,EAAK1G,OAAQ2M,EAAI8T,EAAG9T,GAAK,EAC3C0T,GAAoB,EACpBF,EAAWE,GAAoB3Z,EAAKiG,GACpCwT,EAAWzZ,EAAKiG,IAAM0T,KAmhBG7lB,W,YCnjB3BinB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUznB,QAG3C,IAAIC,EAASsnB,EAAyBE,GAAY,CAGjDznB,QAAS,IAOV,OAHA0nB,EAAoBD,GAAUxnB,EAAQA,EAAOD,QAASwnB,GAG/CvnB,EAAOD,QCjBf,OCHAwnB,EAAoB9E,EAAI,WACvB,GAA0B,iBAAfP,WAAyB,OAAOA,WAC3C,IACC,OAAO1hB,MAAQ,IAAIknB,SAAS,cAAb,GACd,MAAOzM,GACR,GAAsB,iBAAXgH,OAAqB,OAAOA,QALjB,GDGjBsF,EAAoB,K","file":"tutti.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tutti\"] = factory();\n\telse\n\t\troot[\"tutti\"] = factory();\n})(self, function() {\nreturn ","module.exports = require(\"./lib/tutti\");\n","const ducts = require(\"@iflb/ducts\");\nconst Buffer = require('buffer').Buffer;\n\nclass Duct extends ducts.Duct {\n\n    constructor() {\n        super();\n\n        this.onOpenHandlers = [];\n\n        this.controllers = {\n            resource: new ResourceController(this),\n            mturk: new MTurkController(this)\n        };\n        this.eventListeners = {\n            resource: new ResourceEventListener(),\n            mturk: new MTurkEventListener()\n        };\n\n        this.send = \n            (rid, eid, data) => {\n                if(this.logger) this.logger.addSent(rid, eid, data);\n                return super._send(this, rid, eid, data);\n            }\n\n        this.addOnOpenHandler = (handler) => { this.onOpenHandlers.push(handler); };\n    }\n\n    _onopen(self, event) {\n        super._onopen( self, event );\n        self.setEventHandler( self.EVENT.APP_WSD, (rid, eid, data) => { self.APP_WSD = data } );\n        self.send( self.next_rid(), self.EVENT.APP_WSD, null );\n\n        this.setupHandlers(this);\n        for(const handler of this.onOpenHandlers)  handler();\n    }\n\n    _onmessage(self, event) {\n        const [rid, eid, data] = self.decode(Buffer.from(event.source.data));\n        if(self.logger) self.logger.addReceived(rid, eid, data);\n        super._onmessage( self, event );\n    }\n\n    invokeOrWaitForOpen(f) {\n        if(this.state==ducts.State.OPEN_CONNECTED) f();\n        else this.addOnOpenHandler(f);\n    }\n \n    // FIXME:: needs a protocol\n    _handleMTurk(self, name, data) {\n        if(data[\"Status\"]==\"Success\") {\n            for(const func of self.eventListeners.mturk[name].success)  func(data[\"Contents\"]);\n        } else {\n            for(const func of self.eventListeners.mturk[name].error)  func(data);\n        }\n    }\n\n    _handleResource(self, name, data) {\n        if(data[\"Status\"]==\"Success\")\n            for(const func of self.eventListeners.resource[name].success)  func(data[\"Contents\"]);\n        else\n            for(const func of self.eventListeners.resource[name].error)  func(data);\n    }\n\n    setupHandlers(self) {\n        self.setEventHandler( self.EVENT.EVENT_HISTORY,\n                              (rid, eid, data) => {\n                                  // FIXME\n                                  if(\"AllHistory\" in data[\"Contents\"])  self._handleResource(self, \"getEventHistory\", data);\n                                  else if(\"History\" in data[\"Contents\"])  self._handleResource(self, \"setEventHistory\", data);\n                              });\n        self.setEventHandler( self.EVENT.LIST_PROJECTS,\n                              (rid, eid, data) => { self._handleResource(self, \"listProjects\", data); } );\n        self.setEventHandler( self.EVENT.CREATE_PROJECT,\n                              (rid, eid, data) => { self._handleResource(self, \"createProject\", data); } );\n        self.setEventHandler( self.EVENT.GET_PROJECT_SCHEME,\n                              (rid, eid, data) => { self._handleResource(self, \"getProjectScheme\", data); } );\n        self.setEventHandler( self.EVENT.CREATE_TEMPLATES,\n                              (rid, eid, data) => { self._handleResource(self, \"createTemplates\", data); } );\n        self.setEventHandler( self.EVENT.LIST_TEMPLATE_PRESETS,\n                              (rid, eid, data) => { self._handleResource(self, \"listTemplatePresets\", data); } );\n        self.setEventHandler( self.EVENT.LIST_TEMPLATES,\n                              (rid, eid, data) => { self._handleResource(self, \"listTemplates\", data); } );\n        self.setEventHandler( self.EVENT.GET_RESPONSES_FOR_TEMPLATE,\n                              (rid, eid, data) => { self._handleResource(self, \"getResponsesForTemplate\", data); } );\n        self.setEventHandler( self.EVENT.GET_RESPONSES_FOR_NANOTASK,\n                              (rid, eid, data) => { self._handleResource(self, \"getResponsesForNanotask\", data); } );\n        self.setEventHandler( self.EVENT.GET_NANOTASKS,\n                              (rid, eid, data) => { self._handleResource(self, \"getNanotasks\", data); } );\n        self.setEventHandler( self.EVENT.UPLOAD_NANOTASKS,\n                              (rid, eid, data) => { self._handleResource(self, \"uploadNanotasks\", data); } );\n        self.setEventHandler( self.EVENT.DELETE_NANOTASKS,\n                              (rid, eid, data) => { self._handleResource(self, \"deleteNanotasks\", data); } );\n        self.setEventHandler( self.EVENT.UPDATE_NANOTASK_NUM_ASSIGNABLE,\n                              (rid, eid, data) => { self._handleResource(self, \"updateNanotaskNumAssignable\", data); } );\n        self.setEventHandler( self.EVENT.SESSION,\n                              (rid, eid, data) => {\n                                  if(data[\"Contents\"][\"Command\"]==\"Create\") self._handleResource(self, \"createSession\", data);\n                                  else if(data[\"Contents\"][\"Command\"]==\"Get\") self._handleResource(self, \"getTemplateNode\", data);\n                                  else if(data[\"Contents\"][\"Command\"]==\"SetResponse\") self._handleResource(self, \"setResponse\", data);\n                              } );\n        self.setEventHandler( self.EVENT.CHECK_PLATFORM_WORKER_ID_EXISTENCE_FOR_PROJECT,\n                              (rid, eid, data) => { self._handleResource(self, \"checkPlatformWorkerIdExistenceForProject\", data); } );\n\n\n        self.setEventHandler( self.EVENT.MTURK_GET_CREDENTIALS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"getCredentials\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_SET_CREDENTIALS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"setCredentials\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_CLEAR_CREDENTIALS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"clearCredentials\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_SET_SANDBOX,\n                              (rid, eid, data) => { self._handleMTurk(self, \"setSandbox\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_GET_HIT_TYPES,\n                              (rid, eid, data) => { self._handleMTurk(self, \"getHITTypes\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_CREATE_HIT_TYPE,\n                              (rid, eid, data) => { self._handleMTurk(self, \"createHITType\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_CREATE_HITS_WITH_HIT_TYPE,\n                              (rid, eid, data) => { self._handleMTurk(self, \"createHITsWithHITType\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_LIST_QUALIFICATIONS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listQualifications\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_LIST_HITS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listHITs\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_LIST_HITS_FOR_HIT_TYPE,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listHITsForHITType\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_EXPIRE_HITS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"expireHITs\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_DELETE_HITS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"deleteHITs\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_CREATE_QUALIFICATION,\n                              (rid, eid, data) => { self._handleMTurk(self, \"createQualification\", data); } );\n\n        self.setEventHandler( self.EVENT.LIST_WORKERS,\n                              (rid, eid, data) => {\n                                  // FIXME\n                                  if(data[\"Contents\"][\"Platform\"]==\"MTurk\") self._handleMTurk(self, \"listWorkers\", data);\n                                  else self._handleResource(self, \"listWorkers\", data);\n                              });\n\n        self.setEventHandler( self.EVENT.MTURK_LIST_WORKERS_WITH_QUALIFICATION_TYPE,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listWorkersWithQualificationType\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_DELETE_QUALIFICATIONS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"deleteQualifications\", data); } );\n\n        self.setEventHandler( self.EVENT.MTURK_LIST_ASSIGNMENTS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listAssignments\", data); } );\n        self.setEventHandler( self.EVENT.MTURK_LIST_ASSIGNMENTS_FOR_HITS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"listAssignmentsForHITs\", data); } );\n        self.setEventHandler( self.EVENT.MTURK_APPROVE_ASSIGNMENTS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"approveAssignments\", data); } );\n        self.setEventHandler( self.EVENT.MTURK_REJECT_ASSIGNMENTS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"rejectAssignments\", data); } );\n        self.setEventHandler( self.EVENT.MTURK_GET_ASSIGNMENTS,\n                              (rid, eid, data) => { self._handleMTurk(self, \"getAssignments\", data); } );\n    }\n}\n\nclass DuctEventLogger {\n    constructor(duct, dataSizeLimit) {\n        this._duct = duct;\n        this.log = [];\n        this.dataSizeLimit = dataSizeLimit || 3000;\n    }\n\n    addSent(rid, eid, data) {\n        this.log[rid] = { eid, sent: this._skipLargeData(data), received: [] };\n    }\n\n    addReceived(rid, eid, data) {\n        if(!(rid in this.log))  throw new ReferenceError(`request id ${rid} (eid: ${eid}) is not found in the log`);\n        if(this.log[rid].eid != eid)  throw new ReferenceError(`event id ${eid} does not correspond to the log`);\n\n        data[\"Contents\"] = this._skipLargeData(data[\"Contents\"]);\n        this.log[rid].received.push(data);\n    }\n\n    _skipLargeData(data) {\n        var newData = {}\n        for(const key in data) {\n            if(typeof data[key] === 'object')\n                newData[key] = (JSON.stringify(data[key]).length <= this.dataSizeLimit) ? data[key] : \"[log skipped]\";\n        }\n        return newData;\n    }\n}\n\nclass DuctEventListener extends ducts.DuctEventListener {\n    constructor() {\n        super();\n        this.on =\n            (names, { success, error }) => {\n                for(let name of (names instanceof Array) ? names : [names]) {\n                    if (!(name in this)) {\n                        throw new ReferenceError('['+name+'] is not defined');\n                    } \n\n                    // if the listener is an empty object (= no handler is registered yet), then initialize it\n                    if(this[name] && Object.keys(this[name]).length === 0 && this[name].constructor === Object)  this[name] = { success: [], error: [] };\n                    \n                    this[name].success.push(success);\n                    this[name].error.push(error);\n                }\n            }\n    }\n}\n\nclass ResourceEventListener extends DuctEventListener {\n    constructor() {\n        super();\n\n        this.getEventHistory = {};\n        this.setEventHistory = {};\n        this.listProjects = {};\n        this.createProject = {};\n        this.getProjectScheme = {};\n        this.createTemplates = {};\n        this.listTemplatePresets = {};\n        this.listTemplates = {};\n        this.getResponsesForTemplate = {};\n        this.getResponsesForNanotask = {};\n        this.getNanotasks = {};\n        this.uploadNanotasks = {};\n        this.deleteNanotasks = {};\n        this.updateNanotaskNumAssignable = {};\n\n        this.getTemplateNode = {};\n        this.setResponse = {};\n        this.createSession = {};\n        this.checkPlatformWorkerIdExistenceForProject = {};\n    }\n}\n\nclass MTurkEventListener extends DuctEventListener {\n    constructor() {\n        super();\n\n        this.getCredentials = {};\n        this.setCredentials = {};\n        this.clearCredentials = {};\n        this.setSandbox = {};\n        this.getHITTypes = {};\n        this.createHITType = {};\n        this.createHITsWithHITType = {};\n        this.listQualifications = {};\n        this.listHITs = {};\n        this.listHITsForHITType = {};\n        this.expireHITs = {};\n        this.deleteHITs = {};\n        this.createQualification = {};\n        this.listWorkers = {};\n        this.listWorkersWithQualificationType = {};\n        this.deleteQualifications = {};\n        this.listAssignments = {};\n        this.listAssignmentsForHITs = {};\n        this.approveAssignments = {};\n        this.rejectAssignments = {};\n        this.getAssignments = {};\n    }\n}\n\nclass MTurkController {\n    constructor( duct ){\n        this._duct = duct;\n\n        this.getCredentials =\n            (  ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_GET_CREDENTIALS );\n            };\n        this.setCredentials =\n            ( AccessKeyId, SecretAccessKey ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_SET_CREDENTIALS, { AccessKeyId, SecretAccessKey } );\n            };\n        this.setSandbox =\n            ( Enabled ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_SET_SANDBOX, { Enabled } );\n            };\n        this.clearCredentials =\n            (  ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_CLEAR_CREDENTIALS );\n            };\n\n        this.deleteQualifications =\n            ( QualificationTypeIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_DELETE_QUALIFICATIONS, { QualificationTypeIds } );\n            };\n        this.listQualifications =\n            () => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_QUALIFICATIONS );\n            };\n        this.listWorkersWithQualificationType =\n            ( QualificationTypeId ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_WORKERS_WITH_QUALIFICATION_TYPE, { QualificationTypeId } );\n            };\n        this.createQualification =\n            ( QualificationTypeParams ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_CREATE_QUALIFICATION, QualificationTypeParams );\n            };\n        this.associateQualificationsWithWorkers =\n            ( AssociateQualificationParams ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_ASSOCIATE_QUALIFICATIONS_WITH_WORKERS, AssociateQualificationParams );\n            };\n        this.listWorkers =\n            (  ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.LIST_WORKERS, { Platform: \"MTurk\" } );\n            };\n        this.notifyWorkers =\n            ( Subject, MessageText, SendEmailWorkerIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_NOTIFY_WORKERS, { Subject, MessageText, SendEmailWorkerIds } );\n            };\n        this.createHITType =\n            ( CreateHITTypeParams, HITTypeQualificationTypeId ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_CREATE_HIT_TYPE, { CreateHITTypeParams, HITTypeQualificationTypeId } );\n            };\n        this.createHITsWithHITType =\n            ( ProjectName, NumHITs, CreateHITsWithHITTypeParams ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_CREATE_HITS_WITH_HIT_TYPE, { ProjectName, NumHITs, CreateHITsWithHITTypeParams } );\n            };\n        this.getHITTypes =\n            ( HITTypeIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_GET_HIT_TYPES, { HITTypeIds } );\n            };\n        this.expireHITs =\n            ( HITIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_EXPIRE_HITS, { HITIds } );\n            };\n        this.deleteHITs =\n            ( HITIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_DELETE_HITS, { HITIds } );\n            };\n        this.listHITs =\n            ( Cached ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_HITS, { Cached } );\n            };\n        this.listHITsForHITType =\n            ( HITTypeId=null, Cached=true ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_HITS_FOR_HIT_TYPE, { HITTypeId, Cached } );\n            };\n        this.listAssignments =\n            ( Cached ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_ASSIGNMENTS, { Cached } );\n            };\n        this.listAssignmentsForHITs =\n            ( HITIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_LIST_ASSIGNMENTS_FOR_HITS, { HITIds } );\n            };\n        this.approveAssignments =\n            ( AssignmentIds, RequesterFeedback ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_APPROVE_ASSIGNMENTS, { AssignmentIds, RequesterFeedback } );\n            };\n        this.rejectAssignments =\n            ( AssignmentIds, RequesterFeedback ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_REJECT_ASSIGNMENTS, { AssignmentIds, RequesterFeedback } );\n            };\n        this.getAssignments =\n            ( AssignmentIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.MTURK_GET_ASSIGNMENTS, { AssignmentIds } );\n            };\n    }\n}\n\nclass ResourceController {\n    constructor(duct){\n        this._duct = duct;\n\n        this.getEventHistory =\n            () => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.EVENT_HISTORY, null );\n            };\n        this.setEventHistory =\n            ( eid, query ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.EVENT_HISTORY, [eid, query] );\n            };\n\n        this.listProjects =\n            () => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.LIST_PROJECTS );\n            };\n        this.createProject =\n            ( ProjectName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.CREATE_PROJECT, { ProjectName } );\n            };\n        this.listTemplates =\n            ( ProjectName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.LIST_TEMPLATES, { ProjectName } );\n            };\n        this.getResponsesForTemplate =\n            ( ProjectName, TemplateName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.GET_RESPONSES_FOR_TEMPLATE, { ProjectName, TemplateName } );\n            };\n        this.getResponsesForNanotask =\n            ( NanotaskId ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.GET_RESPONSES_FOR_NANOTASK, { NanotaskId } );\n            };\n        this.createTemplates =\n            ( ProjectName, TemplateNames, PresetEnvName, PresetTemplateName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.CREATE_TEMPLATES, { ProjectName, TemplateNames, PresetEnvName, PresetTemplateName } );\n            };\n        this.listTemplatePresets =\n            () => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.LIST_TEMPLATE_PRESETS );\n            };\n        this.getProjectScheme =\n            ( ProjectName, Cached ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.GET_PROJECT_SCHEME, { ProjectName, Cached } );\n            };\n        this.getNanotasks =\n            ( ProjectName, TemplateName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.GET_NANOTASKS, { ProjectName, TemplateName } );\n            };\n        this.deleteNanotasks =\n            ( ProjectName, TemplateName, NanotaskIds ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.DELETE_NANOTASKS, { ProjectName, TemplateName, NanotaskIds } );\n            };\n        this.updateNanotaskNumAssignable =\n            ( ProjectName, TemplateName, NanotaskId, NumAssignable ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.UPDATE_NANOTASK_NUM_ASSIGNABLE, { ProjectName, TemplateName, NanotaskId, NumAssignable } );\n            };\n        this.uploadNanotasks =\n            ( ProjectName, TemplateName, Nanotasks, NumAssignable, Priority, TagName ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.UPLOAD_NANOTASKS, { ProjectName, TemplateName, Nanotasks, NumAssignable, Priority, TagName } );\n            };\n        this.getTemplateNode =\n            ( Target, WorkSessionId, NodeSessionId ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.SESSION, { Command: \"Get\", Target, WorkSessionId, NodeSessionId } );\n            };\n        this.createSession =\n            ( ProjectName, PlatformWorkerId, ClientToken, Platform ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.SESSION, { Command: \"Create\", ProjectName, PlatformWorkerId, ClientToken, Platform } );\n            };\n        this.setResponse =\n            ( WorkSessionId, NodeSessionId, Answers ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.SESSION, { Command: \"SetResponse\", WorkSessionId, NodeSessionId, Answers } );\n            };\n        this.checkPlatformWorkerIdExistenceForProject =\n            ( ProjectName, Platform, PlatformWorkerId ) => {\n                return this._duct.send( this._duct.next_rid(), this._duct.EVENT.CHECK_PLATFORM_WORKER_ID_EXISTENCE_FOR_PROJECT, { ProjectName, Platform, PlatformWorkerId } );\n            };\n                \n    }\n    \n}\n\nmodule.exports = {\n    Duct,\n    DuctEventLogger,\n    DuctEventListener,\n    ResourceEventListener, \n    MTurkEventListener,\n    MTurkController,\n    ResourceController,\n}\n","const MessagePack = require(\"what-the-pack\");\nconst { encode, decode } = MessagePack.initialize(2**22);\nconst WebSocket = require(\"websocket\").w3cwebsocket;\nconst fetch = require(\"node-fetch\");\nconst getRandomValues = require(\"get-random-values\");\nconst Buffer = require('buffer').Buffer;\n\n//https://github.com/necojackarc/extensible-custom-error/blob/master/src/index.js\nclass DuctError extends Error {\n    \n    constructor(message, error=null, ...args) {\n\tsuper(message, error, ...args);\n\n\t// Align with Object.getOwnPropertyDescriptor(Error.prototype, 'name')\n\tObject.defineProperty(this, 'name', {\n\t    configurable: true,\n\t    enumerable: false,\n\t    value: this.constructor.name,\n\t    writable: true,\n\t});\n\n\t// Helper function to merge stack traces\n\tconst merge =\n\t      (stackTraceToMerge, baseStackTrace) => {\n\t\t  const entriesToMerge = stackTraceToMerge.split('\\n');\n\t\t  const baseEntries = baseStackTrace.split('\\n');\n\t\t  const newEntries = [];\n\t\t  entriesToMerge.forEach((entry) => {\n\t\t      if (baseEntries.includes(entry)) {\n\t\t\t  return;\n\t\t      }\n\t\t      newEntries.push(entry);\n\t\t  });\n\t\t  return [...newEntries, ...baseEntries].join('\\n');\n\t      };\n\tif (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, this.constructor);\n\t    this.stack = error ? merge(this.stack, error.stack) : this.stack;\n\t}\n\t\n    }\n    \n};\n\nclass DuctEvent {\n    constructor() {\n    }\n};\n\nclass DuctConnectionEvent extends DuctEvent {\n\n    constructor(state, source) {\n\tsuper();\n\tthis.state = state;\n\tthis.source = source;\n    }\n\n};\n\nclass DuctMessageEvent extends DuctEvent {\n\n    constructor(rid, eid, data) {\n\tsuper();\n\tthis.rid = rid;\n\tthis.eid = eid;\n\tthis.data = data;\n    }\n\n};\n\nconst State = Object.freeze({\n    CLOSE : -1\n    , OPEN_CONNECTING : WebSocket.CONNECTING \n    , OPEN_CONNECTED : WebSocket.OPEN \n    , OPEN_CLOSING : WebSocket.CONNECTING \n    , OPEN_CLOSED : WebSocket.CLOSED \n});\n\nclass DuctEventListener {\n    \n    constructor() {\n\tthis.on =\n\t    (names, func) => {\n\t\tfor(let name of (names instanceof Array) ? names : [names]) {\n\t\t    if (!(name in this)) {\n\t\t\tthrow new ReferenceError('['+name+'] in '+this.constructor.name);\n\t\t    } \n\t\t    this[name] = func;\n\t\t}\n\t\t\n\t    };\n\t\n    }\n};\n\nclass ConnectionEventListener extends DuctEventListener {\n    onopen(event){}\n    onclose(event){}\n    onerror(event){}\n    onmessage(event){}\n    \n};\n\nclass Duct {\n    \n    constructor() {\n\tthis.WSD = null;\n\tthis.EVENT = null;\n\tthis.encode = null;\n\tthis.decode = null;\n\t\n    this.next_rid = \n        () => {\n            let next_id = new Date().getTime();\n            if (next_id <= this.last_rid) {\n                next_id = this.last_rid + 1;\n            }\n            this.last_rid = next_id;\n            return next_id;\n        };\n\tthis.open =\n\t    (wsd_url, uuid = null, params = {}) => {return this._open(this, wsd_url, uuid, params);};\n\tthis.reconnect =\n\t    () => {return this._reconnect(this);};\n\tthis.send = \n\t    (request_id, event_id, data) => {return this._send(this, request_id, event_id, data)};\n\tthis.close =\n\t    () => {return this._close(this);};\n\n\tthis._connection_listener = new ConnectionEventListener();\n\t\n\tthis._event_handler = {};\n\tthis.setEventHandler = \n\t    (event_id, handler) => {this._event_handler[event_id] = handler;};\n\tthis.catchall_event_handler = (rid, eid, data) => {};\n\tthis.uncaught_event_handler = (rid, eid, data) => {};\n\tthis.event_error_handler = (rid, eid, data, error) => {};\n\t\n    }\n\n    get state() {\n\tif (this._ws) {\n\t    return this._ws.readyState;\n\t} else {\n\t    return State.CLOSE;\n\t}\n    }\n\n    _reconnect(self, wsd) {\n\tif (wsd != null) {\n\t    self.WSD = wsd;\n\t    self.EVENT = self.WSD.EVENT;\n\t}\n\treturn new Promise(function(resolve, reject) {\n\t    if (self._ws) {\n\t\tresolve(self);\n\t\treturn;\n\t    }\n\t    let ws = new WebSocket(self.WSD.websocket_url_reconnect);\n\t    ws.binaryType = 'arraybuffer';\n\t    ws.onopen = \n\t\t(event) => {\n\t\t    ws.onerror =\n\t\t\t(event) => {self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));};\n\t\t    ws.onclose =\n\t\t\t(event) => {self._connection_listener.onclose(new DuctConnectionEvent('onclose', event));};\n\t\t    ws.onmessage = \n\t\t\t(event) => {self._onmessage(self, new DuctConnectionEvent('onmessage', event));};\n\t\t    self._ws = ws;\n\t\t    self._onreconnect(self, event);\n\t\t    self._connection_listener.onopen(new DuctConnectionEvent('onopen', event));\n\t\t    resolve(self);\n\t\t};\n\t    ws.onerror =\n\t\t(event) => {\n\t\t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));\n\t\t    reject(event);\n\t\t};\n\t});\n    }\n    \n    _open(self, wsd_url, uuid, params) {\n\treturn new Promise(function(resolve, reject) {\n\t    if (self._ws) {\n\t\tresolve(self);\n\t\treturn;\n\t    }\n\t    let query = uuid != null ? uuid : '?uuid='+([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n\t    for (let [key, value] of Object.entries(params)) {\n\t\tquery += '&'+key+'='+value;\n\t    }\n\t    fetch(wsd_url + query, { headers: { \"User-Agent\": \"\" } })\n\t\t.then( response => {\n\t\t    return response.json();\n\t\t}).then( wsd => {\n\t\t    //console.log(wsd);\n\t\t    self.WSD = wsd;\n\t\t    self.EVENT = self.WSD.EVENT;\n\t\t    //console.log(self.WSD.websocket_url);\n\t\t    let ws = new WebSocket(self.WSD.websocket_url);\n\t\t    ws.binaryType = 'arraybuffer';\n\t\t    ws.onopen = \n\t\t\t(event) => {\n\t\t\t    ws.onerror =\n\t\t\t\t(event) => {self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));};\n\t\t\t    ws.onclose =\n\t\t\t\t(event) => {self._connection_listener.onclose(new DuctConnectionEvent('onclose', event));};\n\t\t\t    ws.onmessage = \n\t\t\t\t(event) => {self._onmessage(self, new DuctConnectionEvent('onmessage', event));};\n\t\t\t    self._ws = ws;\n\t\t\t    self._onopen(self, event);\n\t\t\t    self._connection_listener.onopen(new DuctConnectionEvent('onopen', event));\n\t\t\t    resolve(self);\n\t\t\t};\n\t\t    ws.onerror =\n\t\t\t(event) => {\n\t\t\t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', event));\n\t\t\t    reject(event);\n\t\t\t};\n\t\t}).catch( (error) => {\n\t\t    //console.error(error);\n\t\t    self._connection_listener.onerror(new DuctConnectionEvent('onerror', error));\n\t\t    reject(error);\n\t\t});\n\t});\n    }\n    \n    _onopen(self, event) {\n\tself.encode = encode;\n\tself.decode = decode;\n\tself._send_timestamp = new Date().getTime() / 1000;\n\tself.time_offset = 0;\n\tself.time_latency = 0;\n\tself._time_count = 0;\n\tself.setEventHandler(this.EVENT.ALIVE_MONITORING, (rid, eid, data) => {\n\t    let client_received = new Date().getTime() / 1000;\n\t    let server_sent = data[0];\n\t    let server_received = data[1];\n\t    let client_sent = this._send_timestamp;\n\t    //console.log('t0='+client_sent+', t1='+server_received+', t2='+server_sent+',t3='+client_received);\n\t    let new_offset = ((server_received - client_sent) - (client_received - server_sent))/2;\n\t    let new_latency = ((client_received - client_sent) - (server_sent - server_received))/2;\n\t    this.time_offset = (this.time_offset * this._time_count + new_offset) / (this._time_count + 1);\n\t    this.time_latency = (this.time_latency * this._time_count + new_latency) / (this._time_count + 1);\n\t    this._time_count += 1;\n\t    //console.log('offset='+this.time_offset+', latency='+this.time_latency);\n\t});\n\tlet rid = self.next_rid();\n\tlet eid = self.EVENT.ALIVE_MONITORING;\n\tlet value = self._send_timestamp;\n\tself.send(rid, eid, value);\n    }\n    \n    _onreconnect(self, event) {\n\t//console.log('reconnected');\n    }\n    \n    _send(self, request_id, event_id, data) {\n\tconst msgpack = self.encode([request_id, event_id, data])\n\tself._ws.send(msgpack)\n\treturn request_id;\n    }\n    \n    _close(self) {\n\ttry {\n\t    if (self._ws) {\n\t\tself._ws.close();\n\t    }\n\t} finally {\n\t    self._ws = null;\n\t}\n    }\n    \n    _onmessage(self, event) {\n\ttry {\n\t    self._connection_listener.onmessage(event);\n\t    const [rid, eid, data] = self.decode(Buffer.from(event.source.data));\n\t    try {\n\t\tself.catchall_event_handler(rid, eid, data);\n\t\tlet handle = (eid in self._event_handler) ? self._event_handler[eid] : self.uncaught_event_handler;\n\t\thandle(rid, eid, data);\n\t    } catch(error) {\n\t\tself.event_error_handler(rid, eid, data, error);\n\t    }\n\t}\n\tcatch (error) {\n\t    self.event_error_handler(-1, -1, null, error);\n\t}\n    }\n\n};\n\nmodule.exports = {\n    DuctError,\n    DuctEvent,\n    DuctConnectionEvent,\n    DuctMessageEvent,\n    State,\n    DuctEventListener,\n    ConnectionEventListener,\n    Duct\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var window = require('global/window');\nvar nodeCrypto = require('crypto');\n\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict';\n\nconst BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB'\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB'\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit'\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nmodule.exports = (number, options) => {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = Object.assign({bits: false, binary: false}, options);\n\n\tconst UNITS = options.bits ?\n\t\t(options.binary ? BIBIT_UNITS : BIT_UNITS) :\n\t\t(options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = Object.assign({maximumFractionDigits: options.maximumFractionDigits}, localeOptions);\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\t// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\tnumber /= Math.pow(options.binary ? 1024 : 1000, exponent);\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n};\n","var _globalThis;\ntry {\n\t_globalThis = require('es5-ext/global');\n} catch (error) {\n} finally {\n\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","\n/* eslint-disable no-console */\n\nconst pb = require('pretty-bytes');\nconst Buffer = require('buffer').Buffer;\n\nconst initialize = (tempBufferLength, logFunction) => {\n  if (typeof tempBufferLength !== 'number' || Number.isNaN(tempBufferLength) === true) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be a number.');\n  }\n  if (tempBufferLength < 1) {\n    throw Error('@initialize : expecting \"tempBufferLength\" to be greater than zero.');\n  }\n  if (logFunction !== undefined) {\n    if (typeof logFunction !== 'function') {\n      throw Error('@initialize : expecting \"logFunction\" to be a function.');\n    }\n    logFunction(`@initialize : setting buffer limit to ${pb(tempBufferLength)}`);\n  }\n  const dictionary = {};\n  let dictionaryEnabled = false;\n  let dictionaryOffset = -33;\n  /**\n   * Why -33:\n   * - This allows us to use the negative (-32 to -1) and positive fixint range (0 to 127)\n   * - So instead of encoding the whole key string, we only encode a single byte\n   * - That's (32 + 128) = 160 of your first entries being encoded in a single damn byte\n   */\n  const register = (...args) => {\n    if (dictionaryEnabled === false) dictionaryEnabled = true;\n    for (let i = 0, l = args.length; i < l; i += 1) {\n      dictionaryOffset += 1;\n      dictionary[dictionaryOffset] = args[i];\n      dictionary[args[i]] = dictionaryOffset;\n    }\n  };\n  const tempEncodeBuffer = Buffer.allocUnsafe(tempBufferLength).fill(0);\n  let tempEncodeBufferOffset = -1;\n  const internalEncode = (value) => {\n    let length = 0;\n    switch (typeof value) {\n      case 'string':\n        length = Buffer.byteLength(value);\n        if (length < 32) { // < 32, fixstr\n          length = 0;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              length += 1;\n            } else if (c < 1280) {\n              length += 2;\n            } else if (c < 55296 || c >= 57344) {\n              length += 3;\n            } else {\n              i += 1;\n              length += 4;\n            }\n          }\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 160;\n          for (let i = 0, c = 0, l = value.length; i < l; i += 1) {\n            c = value.charCodeAt(i);\n            if (c < 128) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = c;\n            } else if (c < 1280) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192 | (c >> 6);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else if (c < 55296 || c >= 57344) {\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 224 | (c >> 12);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            } else {\n              i += 1;\n              c = 65536 + (((c & 1023) << 10) | (value.charCodeAt(i) & 1023));\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 240 | (c >> 18);\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 12) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c >> 6) & 63;\n              tempEncodeBuffer[tempEncodeBufferOffset += 1] = 128 | (c & 63);\n            }\n          }\n        } else if (length < 256) { // str8\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 217;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 65536) { // str16\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 218;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else if (length < 4294967296) { // str32\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 219;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          tempEncodeBuffer.write(value, tempEncodeBufferOffset += 1, length, 'utf8');\n          tempEncodeBufferOffset += length - 1;\n        } else {\n          throw Error('@internalEncode : Max supported string length (4294967296) exceeded, encoding failure.');\n        }\n        break;\n      case 'number':\n        if (Number.isFinite(value) === false) {\n          if (Number.isNaN(value) === true) { // NaN, fixext 1, type = 0, data = 1\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 1;\n            break;\n          }\n          if (value === Infinity) { // +Infinity, fixext 1, type = 0, data = 2\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 2;\n            break;\n          }\n          if (value === -Infinity) { // -Infinity, fixext 1, type = 0, data = 3\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 3;\n            break;\n          }\n        }\n        if (Math.floor(value) !== value) {\n          if (Math.fround(value) === value) {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 202;\n            tempEncodeBuffer.writeFloatBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 3;\n            break;\n          } else {\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 203;\n            tempEncodeBuffer.writeDoubleBE(value, tempEncodeBufferOffset += 1);\n            tempEncodeBufferOffset += 7;\n            break;\n          }\n        }\n        if (value >= 0) {\n          if (value < 128) { // positive fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 256) { // uint 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 204;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 65536) {  // uint 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 205;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value < 4294967296) { // uint 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 206;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // uint 64\n          let hi = (value / Math.pow(2, 32)) >> 0, lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 207;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        } else {\n          if (value >= -32) { // negative fixint\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128) { // int 8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 208;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -12800) { // int 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 209;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          if (value >= -128000000) { // int 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 210;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = value;\n            break;\n          }\n          // int 64\n          let hi = Math.floor(value / Math.pow(2, 32)), lo = value >>> 0;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 211;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = hi;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 24;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 16;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo >> 8;\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = lo;\n        }\n        break;\n      case 'object':\n        if (value === null) { // null\n          tempEncodeBuffer[tempEncodeBufferOffset += 1] = 192;\n          break;\n        }\n        if (Array.isArray(value) === true) {\n          length = value.length;\n          if (length < 16) { // fixarray\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 144;\n          } else if (length < 65536) { // array 16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 220;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // array 32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 221;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Array too large');\n          }\n          for (let i = 0; i < length; i += 1) {\n            internalEncode(value[i]);\n          }\n          break;\n        }\n        if (value instanceof ArrayBuffer) { // arraybuffer to buffer\n          value = Buffer.from(value);\n        }\n        if (\n          value instanceof Buffer === false &&\n          (\n            value instanceof Int8Array\n            || value instanceof Int16Array\n            || value instanceof Int32Array\n            || value instanceof Uint8Array\n            || value instanceof Uint8ClampedArray\n            || value instanceof Uint16Array\n            || value instanceof Uint32Array\n            || value instanceof Float32Array\n            || value instanceof Float64Array\n          )\n        ) {\n          let temp = Buffer.from(value.buffer);\n          if (value.byteLength !== value.buffer.byteLength) {\n            temp = temp.slice(value.byteOffset, value.byteOffset + value.byteLength)\n          }\n          value = temp;\n        }\n        if (value instanceof Buffer) { // typedarrays and buffer\n          length = value.length;\n          if (length < 256) { // bin8\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 196;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            if (length > 32) {\n              value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n              tempEncodeBufferOffset += length - 1;\n            } else {\n              for (let i = 0; i < length; i++) {\n                tempEncodeBuffer[tempEncodeBufferOffset += 1] = value[i];\n              }\n            }\n          } else if (length < 65536) { // bin16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 197;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else if (length < 4294967296) { // bin32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 198;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n            value.copy(tempEncodeBuffer, tempEncodeBufferOffset += 1, 0, length);\n            tempEncodeBufferOffset += length - 1;\n          } else {\n            throw Error('@internalEncode : Max supported buffer length (4294967296) exceeded, encoding failure.');\n          }\n          break;\n        } else { // plain javascript object\n          let keys = Object.keys(value);\n          length = keys.length;\n          if (length < 16) { // fixmap\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length | 128;\n          } else if (length < 65536) { // map16\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 222;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else if (length < 4294967296) { // map32\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 223;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 24;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 16;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length >> 8;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = length;\n          } else {\n            throw new Error('@internalEncode : Object too large');\n          }\n          if (dictionaryEnabled === true) {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(dictionary[keys[i]] || keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          } else {\n            for (let i = 0; i < length; i += 1) {\n              internalEncode(keys[i]);\n              internalEncode(value[keys[i]]);\n            }\n          }\n        }\n        break;\n      default:\n        switch (value) {\n          case true:  // true\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  195;\n            break;\n          case false: // false\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] =  194;\n            break;\n          case undefined: // undefined, fixext 1, type = 0, data = 0\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 212;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            tempEncodeBuffer[tempEncodeBufferOffset += 1] = 0;\n            break;\n          default:\n            throw Error('@internalEncode : Error encoding value.');\n        }\n    }\n  };\n  const encode = (value) => {\n    tempEncodeBufferOffset = -1;\n    internalEncode(value);\n    const encoded = Buffer.allocUnsafe(tempEncodeBufferOffset + 1).fill(0);\n    tempEncodeBuffer.copy(encoded, 0, 0, tempEncodeBufferOffset + 1);\n    return encoded;\n  };\n  let tempDecodeBuffer = undefined;\n  let tempDecodeBufferOffset = 0;\n  const internalDecode = () => {\n    let value, length;\n    if (tempDecodeBuffer[tempDecodeBufferOffset] < 192) {\n      if (tempDecodeBuffer[tempDecodeBufferOffset] < 128) { // positive fixint\n        value = tempDecodeBuffer[tempDecodeBufferOffset];\n        tempDecodeBufferOffset += 1;\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 144) { // fixmap\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        value = {};\n        tempDecodeBufferOffset += 1;\n        if (dictionaryEnabled === true) {\n          for (let i = 0, key; i < length; i++) {\n            key = internalDecode();\n            value[dictionary[key] || key] = internalDecode();\n          }\n        } else {\n          for (let i = 0; i < length; i++) {\n            value[internalDecode()] = internalDecode();\n          }\n        }\n        return value;\n      } else if (tempDecodeBuffer[tempDecodeBufferOffset] < 160) { // fixarray\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 15;\n        tempDecodeBufferOffset += 1;\n        value = new Array(length);\n        for (let i = 0; i < length; i += 1) {\n          value[i] = internalDecode();\n        }\n        return value;\n      } else { // fixstr\n        length = tempDecodeBuffer[tempDecodeBufferOffset] & 31;\n        tempDecodeBufferOffset += 1;\n        value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n        tempDecodeBufferOffset += length;\n        return value;\n      }\n    } else if (tempDecodeBuffer[tempDecodeBufferOffset] > 223) { // negative fixint\n      value = (255 - tempDecodeBuffer[tempDecodeBufferOffset] + 1) * -1;\n      tempDecodeBufferOffset += 1;\n      return value;\n    } else {\n      switch (tempDecodeBuffer[tempDecodeBufferOffset]) {\n        case 202: // float 32\n          value = tempDecodeBuffer.readFloatBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 203: // float 64\n          value = tempDecodeBuffer.readDoubleBE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 8;\n          return value;\n        case 204: // uint 8\n          value = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 205: // uint 16\n          value = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 206: // uint 32\n          value = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 207: // uint 64\n          value = ( tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 208: // int 8\n          value = tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 209: // int 16\n          value = tempDecodeBuffer.readInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          return value;\n        case 210: // int 32\n          value = tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          return value;\n        case 211: // int 64\n          value = ( tempDecodeBuffer.readInt32BE(tempDecodeBufferOffset += 1) * Math.pow(2, 32) ) + tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 4);\n          tempDecodeBufferOffset += 4;\n          return value;\n\n        case 217: // str 8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 218: // str 16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 219: // str 32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.toString('utf8', tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n\n        case 212: // fixext 1\n          switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = ?\n            case 0:\n              switch ( tempDecodeBuffer.readInt8(tempDecodeBufferOffset += 1) ) { // fixext 1, type = 0, data = ?\n                case 0: // undefined, fixext 1, type = 0, data = 0\n                  value = undefined;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 1: // NaN, fixext 1, type = 0, data = 1\n                  value = NaN;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 2: // +Infinity, fixext 1, type = 0, data = 2\n                  value = Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n                case 3: // -Infinity, fixext 1, type = 0, data = 3\n                  value = -Infinity;\n                  tempDecodeBufferOffset += 1;\n                  return value;\n              }\n            break;\n          }\n          break;\n        case 192: // nil\n          value = null;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 194: // false\n          value = false;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 195: // true\n          value = true;\n          tempDecodeBufferOffset += 1;\n          return value;\n        case 220: // array16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 221: // array32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = new Array(length);\n          for (let i = 0; i < length; i += 1) {\n            value[i] = internalDecode();\n          }\n          return value;\n        case 222: // map16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 2;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 223: // map32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          value = {};\n          tempDecodeBufferOffset += 4;\n          if (dictionaryEnabled === true) {\n            for (let i = 0, key; i < length; i++) {\n              key = internalDecode();\n              value[dictionary[key] || key] = internalDecode();\n            }\n          } else {\n            for (let i = 0; i < length; i++) {\n              value[internalDecode()] = internalDecode();\n            }\n          }\n          return value;\n        case 196: // bin8\n          length = tempDecodeBuffer.readUInt8(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 1;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 197: // bin16\n          length = tempDecodeBuffer.readUInt16BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 2;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n        case 198: // bin32\n          length = tempDecodeBuffer.readUInt32BE(tempDecodeBufferOffset += 1);\n          tempDecodeBufferOffset += 4;\n          value = tempDecodeBuffer.slice(tempDecodeBufferOffset, tempDecodeBufferOffset + length);\n          tempDecodeBufferOffset += length;\n          return value;\n      }\n      throw Error('@internalDecode : Error decoding value.');\n    }\n  };\n  const decode = (buffer) => {\n    tempDecodeBuffer = buffer;\n    tempDecodeBufferOffset = 0;\n    const result = internalDecode();\n    tempDecodeBuffer = undefined;\n    return result;\n  };\n  return { encode, decode, register };\n};\n\nmodule.exports = { initialize, Buffer };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}